{"version":3,"sources":["components/Header.jsx","components/StatusBar.jsx","hooks/useControlledForms.js","components/Login.jsx","components/Register.jsx","components/Authentication.jsx","helpers/timeHelpers.js","constants/settings.js","helpers/stringHelpers.js","constants/strings/languages/EN-US.js","constants/strings/index.js","components/NewBlockForm.jsx","hooks/useNewBlockValidation.js","components/Block.jsx","components/BlockList.jsx","components/DaySchedule.jsx","components/WeekSchedule.jsx","components/ProjectListItem.jsx","components/ProjectList.jsx","components/Reports.jsx","components/Footer.jsx","hooks/useWeeklyBlocks.js","components/App.jsx","hooks/useAuthentication.js","hooks/useSessionTracking.js","hooks/usePopupModal.js","index.js"],"names":["Header","props","username","handleLogout","currentSession","className","to","type","id","onClick","StatusBar","projects","loading","tracking","project_id","title","useControlledForms","fields","useState","formValues","setFormValues","event","preventDefault","prev","newVals","target","value","Login","login","formLoginUsername","formLoginPassword","handleFormChange","Form","Group","controlId","Label","Control","onChange","placeholder","Button","variant","axios","post","rawPassword","then","res","data","Register","formRegisterUsername","formRegisterPassword","Authentication","showLogin","setShowLogin","authComponent","switchMsg","buttonMsg","size","document","activeElement","blur","getLastSunday","date","msSinceSunday","getDay","lastSundayMs","valueOf","Date","minutesSinceMidnight","hours","minutes","getBoundaryMinutes","values","block","startHours","Number","startHour","startAMPM","startMinutes","startMinute","endHours","endHour","endAMPM","endMinutes","endMinute","getFormValuesBoundaryMinutes","start","start_time","end","end_time","getHours","getMinutes","getBlockBoundaryMinutes","SETTINGS","LANGUAGES","EN_US","makeTimeString","time","toLocaleTimeString","hour","minute","STRINGS","NEW_BLOCK_VALIDATION","conflict","startStr","endStr","noProject","endBeforeStart","NewBlockForm","show","handleClose","currentDay","blocks","refreshBlocks","project","handleChange","errors","setErrors","formIsValid","setFormIsValid","useEffect","newBlockStart","newBlockEnd","filter","getDate","map","blockStartMins","blockEndMins","newErrors","valid","Object","length","useNewBlockValidation","showErrors","setShowErrors","LANG","currentDateText","toDateString","projectOptions","reverse","hoursOptions","optionsList","push","errorList","keys","errorType","handleSubmit","a","startMins","endMins","startDateMs","endDateMs","startTime","toISOString","endTime","Modal","onHide","closeButton","Title","Body","onSubmit","htmlFor","name","Footer","Block","day","startTimeStr","endTimeStr","projectid","BlockList","blocksForDay","key","DaySchedule","tomorrow","yesterday","showForm","dayString","WeekSchedule","ProjectListItem","selected","onEditClick","onCancelClick","formValue","ProjectList","setProjects","selectedProject","setSelectedProject","setFormValue","showNewProjectForm","setShowNewProjectForm","newProjectFormValue","setNewProjectFormValue","handleCancel","projectItems","newProject","patch","projectTitle","Reports","reportData","setReportData","get","report","sessions_total","blocks_total","projectName","secondsToHours","sessionHours","blockHours","toPrecision","useWeeklyBlocks","today","setHours","setMinutes","setSeconds","setMilliseconds","setCurrentDay","setBlocks","days","deltaMs","newDay","current","currentSunday","newSunday","checkForNewWeek","App","setLoading","setUsername","console","log","useAuthentication","logout","changeDay","setCurrentSession","closest","projectId","getAttribute","session_id","useSessionTracking","toggleSession","setShow","usePopupModal","closeForm","projectList","forEach","basename","handleShow","exact","path","defaults","baseURL","process","withCredentials","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f525350.chunk.js","sourcesContent":["// Router components\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport '../styles/Header.css';\n\nexport default function Header(props) {\n  const { username, handleLogout, currentSession } = props;\n\n  return(\n    <div className=\"Header navbar navbar-expand-sm navbar-light bg-info\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Capensis</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/schedule\">Schedule</NavLink>\n            </li>\n            {/* <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/week\">Week</NavLink>\n            </li> */}\n            <li className=\"nav-item\">\n              <NavLink to=\"/projects\" className=\"nav-link\">Projects</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/reports\">Reports</NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"d-flex\">\n          <span className=\"navbar-text me-2\">Logged in as {username}</span>\n          <button className=\"btn btn-outline-dark\" onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import '../styles/StatusBar.css';\n\nexport default function StatusBar(props) {\n  const { currentSession, projects} = props;\n\n  const loading = !projects;\n  const tracking = currentSession && projects && projects[currentSession.project_id]\n\n  const bgColor = () => {\n    if (tracking) return 'bg-success text-light';\n    if (!tracking) return 'bg-secondary text-light';\n  }\n\n  return (\n    <div className={`statusBar mb-2 border-top border-info ${bgColor()}`}>\n      { loading &&\n        `Loading...`\n      }\n      { tracking &&\n        `Currently tracking ${projects[currentSession.project_id].title}`\n      }\n      { currentSession && !projects[currentSession.project_id] &&\n        `ERROR: Trying to track project ID ${currentSession.project_id}, but it was not found.`\n      }\n      { !currentSession &&\n        `Not currently tracking`\n      }\n    </div>\n  )\n}","import { useState } from 'react';\n\nexport default function useControlledForms(fields) {\n  const [formValues, setFormValues] = useState(fields)\n\n  const handleFormChange = event => {\n    event.preventDefault();\n    setFormValues(prev => {\n      const newVals = {...prev};\n      newVals[event.target.id] = event.target.value;\n      return newVals;\n    })\n  }\n\n  return [formValues, handleFormChange]\n}","import axios from 'axios';\nimport useControlledForms from '../hooks/useControlledForms';\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\nexport default function Login(props) {\n\n  const { login } = props;\n\n  const [formValues, handleFormChange] = useControlledForms({\n    formLoginUsername: \"\",\n    formLoginPassword: \"\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { formLoginUsername, formLoginPassword } = formValues;\n    axios.post(`/api/login`, {username: formLoginUsername, rawPassword:formLoginPassword})\n         .then(res => login(res.data.username))\n  }\n\n  return (\n    <Form className=\"loginForm\" >\n      <h4>Login</h4>\n      <Form.Group className=\"mb-3\" controlId=\"formLoginUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control onChange={handleFormChange} type=\"text\" placeholder=\"Username\" />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formLoginPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control onChange={handleFormChange} type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n      <Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Form>\n  )\n}","import axios from 'axios';\nimport useControlledForms from '../hooks/useControlledForms';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nexport default function Register(props) {\n\n  const { login } = props;\n\n  const [formValues, handleFormChange] = useControlledForms({\n    formRegisterUsername: \"\",\n    formRegisterPassword: \"\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { formRegisterUsername, formRegisterPassword } = formValues;\n    axios.post(`/api/users`, {username: formRegisterUsername, rawPassword: formRegisterPassword})\n         .then(res => login(res.data.username))\n  }\n\n  return (\n    <Form className=\"registerForm\">\n      <h4>Register</h4>\n      <Form.Group className=\"mb-3\" controlId=\"formRegisterUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control onChange={handleFormChange} type=\"text\" placeholder=\"Username\" />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formRegisterPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control onChange={handleFormChange} type=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n      <Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>\n        Create account\n      </Button>\n    </Form>\n  )\n}","import { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\n\nimport Login from './Login'\nimport Register from './Register'\n\nimport '../styles/NoAuthUser.css';\n\nexport default function Authentication(props) {\n  const {login} = props\n\n  const [showLogin, setShowLogin] = useState(true)\n  \n  const authComponent = showLogin ? <Login login={login} /> : <Register login={login} />;\n  const switchMsg = showLogin ? \"Don't have an account yet?\" : \"Already have a Capensis account?\";\n  const buttonMsg = showLogin ? \"Sign up\" : \"Sign in\";\n\n  const handleSwitch = event => {\n    event.preventDefault();\n    document.activeElement.blur(); // Clear focus from the button\n    setShowLogin(!showLogin)\n  }\n\n  return (\n    <div className=\"Authentication\">\n      <div id=\"Authentication_background\">\n        <div id=\"Authentication_welcome\">\n          <p className=\"appName\">Capensis</p>\n          <p className=\"welcomeMessage\">A super simple scheduler and time-tracker.</p>\n        </div>\n\n        { authComponent }\n\n        <div className=\"Authentication_switch\">\n          <p>{switchMsg}</p>\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={handleSwitch}\n          >{buttonMsg}</Button>\n        </div>\n      </div>\n    </div>\n  )\n}","\nconst msDayMultiplier = 1000*60*60*24;\n\n// Given a Date object, return a Date object of the last Sunday.\nexport function getLastSunday(date) {\n// Get Sunday for this week.\nconst daysSinceSunday = date.getDay(); // Returns 0 for sunday, 1 for Monday, etc\nconst msSinceSunday = msDayMultiplier * daysSinceSunday;\nconst lastSundayMs = date.valueOf() - msSinceSunday;\nreturn new Date(lastSundayMs);\n}\n\n// Set h/min/s/ms of a given date to 0.\nexport function makeZeroDate(date) {\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n}\n\nexport function minutesSinceMidnight (hours, minutes) {\n  return (hours * 60) + minutes;\n}\n\n// Internal helper function to allow getBoundaryMinutes to handle different options\nfunction getFormValuesBoundaryMinutes(values) {\n  const startHours = Number(values.startHour) + Number(values.startAMPM);\n  const startMinutes = Number(values.startMinute)\n  const endHours = Number(values.endHour) + Number(values.endAMPM);\n  const endMinutes = Number(values.endMinute)\n  const startMins = minutesSinceMidnight(startHours, startMinutes);\n  const endMins = minutesSinceMidnight(endHours, endMinutes);\n  return [startMins, endMins]\n}\n\nfunction getBlockBoundaryMinutes(block) {\n  const start = new Date(block.start_time);\n  const end = new Date(block.end_time);\n  const startMins = minutesSinceMidnight(start.getHours(), start.getMinutes())\n  const endMins = minutesSinceMidnight(end.getHours(), end.getMinutes())\n  return [startMins, endMins]\n}\n\nexport function getBoundaryMinutes({values, block}) {\n  if (values) return getFormValuesBoundaryMinutes(values);\n  if (block) return getBlockBoundaryMinutes(block)\n}\n","const SETTINGS = {\n  LANGUAGES: {\n    EN_US: \"EN_US\"\n  }\n}\n\nexport default SETTINGS;","export function makeTimeString(time) {\n  return new Date(time).toLocaleTimeString([], { hour: 'numeric', minute: '2-digit'});\n}","import { makeTimeString } from '../../../helpers/stringHelpers'\n\nconst EN_US = {\n  NEW_BLOCK_VALIDATION: {\n    conflict: ({block}) => {\n      const {title, start_time, end_time} = block;\n      const startStr = makeTimeString(start_time)\n      const endStr = makeTimeString(end_time)\n      return `This time conflicts with another block: ${title}, ${startStr} - ${endStr}`\n    },\n    noProject: () => \"You must select a project.\",\n    endBeforeStart: () => \"That block would end on or before its start time.\"\n  }\n}\n\nexport default EN_US;","import EN_US from './languages/EN-US'\n\nconst STRINGS = {\n  EN_US,\n}\n\nexport default STRINGS;","import { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport useControlledForms from '../hooks/useControlledForms';\nimport useNewBlockValidation from '../hooks/useNewBlockValidation';\n\nimport SETTINGS from '../constants/settings'\nimport STRINGS from '../constants/strings'\n\nimport { getBoundaryMinutes } from '../helpers/timeHelpers'\n\nexport default function NewBlockForm(props) {\n  const { show, handleClose, currentDay, projects, blocks, refreshBlocks } = props;\n\n  const [values, handleChange] = useControlledForms({\n    project: \"\",\n    startHour: \"6\",\n    startMinute: \"00\",\n    startAMPM: \"0\",\n    endHour: \"6\",\n    endMinute: \"00\",\n    endAMPM: \"0\"\n  });\n\n  const [errors, formIsValid] = useNewBlockValidation(values, blocks, currentDay)\n  const [showErrors, setShowErrors] = useState(false);\n\n  const LANG = SETTINGS.LANGUAGES.EN_US;\n  const currentDateText = currentDay && currentDay.toDateString();\n\n  // Make the options lists for the form <select> tags\n  const projectOptions = projects && Object.values(projects).reverse().map(project => (\n    <option value={project.id} key={project.id}>{project.title}</option>\n  ));\n\n  // Note that hoursOptions creates an anonymous function and then\n  // runs it immediately.\n  const hoursOptions = function() {\n    const optionsList = [];\n    for(let hour = 1; hour <= 12; hour++) {\n      // The 12 hour should display as 12, but has a value of 0 for time calculations.\n      // The PM value accounts for the 12-hour offset for noon.\n      // (i.e. 12:00 AM is 00:00 (0 hours for '12' + 0 hours for 'AM'\n      //  and 12:00 PM is 12:00 (0 hours for '12', 12 hours for 'PM'))\n      optionsList.push(\n        <option\n          value={hour === 12 ? 0 : hour}\n          key={hour === 12 ? 0 : hour}\n        >\n            {hour}\n        </option>)\n    }\n    return optionsList;\n  }()\n\n  const makeErrorItem = (errorType) => {\n    return (\n        <li key={errorType}>\n          {STRINGS[LANG].NEW_BLOCK_VALIDATION[errorType](errors[errorType])}\n        </li>\n    )\n  }\n\n  const errorList = Object.keys(errors)\n                          .map(makeErrorItem)\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      setShowErrors(true);\n    } else {\n      setShowErrors(false);\n      // Turn the raw values into ISO strings to send\n      const [startMins, endMins] = getBoundaryMinutes({values});\n      const startDateMs = currentDay.valueOf() + (startMins * 60 * 1000);\n      const endDateMs = currentDay.valueOf() + (endMins * 60 * 1000);\n      const startTime = new Date(startDateMs).toISOString();\n      const endTime = new Date(endDateMs).toISOString();\n      axios.post('/api/blocks', { startTime, endTime, project: values.project})\n           .then(refreshBlocks)\n           .then(handleClose)\n    }\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Schedule a new Block</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Date: <strong>{currentDateText}</strong>\n        <form onSubmit={handleSubmit}>\n          <div className=\"row row-cols-sm-auto g-5 align-items-center\">\n            <label htmlFor=\"project\">Project</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"project\" id=\"project\" value={values.project} onChange={handleChange}>\n                <option value=\"\">Select a project</option>\n                {projectOptions}\n              </select>\n            </div>\n          </div>\n          <div className=\"row row-cols-lg-auto g-2 mt-1 align-items-center\">\n            <label htmlFor=\"startHour\">Starting at:</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startHour\" id=\"startHour\" value={values.startHour} onChange={handleChange}>\n                {hoursOptions}\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startMinute\" id=\"startMinute\" value={values.startMinute} onChange={handleChange}>\n                <option>00</option>\n                <option>15</option>\n                <option>30</option>\n                <option>45</option>\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startAMPM\" id=\"startAMPM\" value={values.startAMPM} onChange={handleChange}>\n                <option value=\"0\">AM</option>\n                <option value=\"12\">PM</option>\n              </select>\n            </div>\n            {showErrors && errors.conflict && errors.conflict.start &&\n             (<small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n             That start time conflicts with an existing Block!\n             </small>)}\n          </div>\n          <div className=\"row row-cols-lg-auto g-2 mt-1 align-items-center\">\n            <label>Ending at:</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"endHour\" id=\"endHour\" value={values.endHour} onChange={handleChange}>\n                {hoursOptions}\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"endMinute\" id=\"endMinute\" value={values.endMinute} onChange={handleChange}>\n                <option>00</option>\n                <option>15</option>\n                <option>30</option>\n                <option>45</option>\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"endAMPM\" id=\"endAMPM\" value={values.endAMPM} onChange={handleChange}>\n                <option value=\"0\">AM</option>\n                <option value=\"12\">PM</option>\n              </select>\n            </div>\n            {showErrors && errors.conflict && errors.conflict.end &&\n             (<small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n             That end time conflicts with an existing Block!\n             </small>)}\n          </div>\n        </form>\n        </Modal.Body>\n          {showErrors && errorList.length !== 0 && (\n            <Modal.Footer><ul>{errorList}</ul></Modal.Footer>\n          )}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport { minutesSinceMidnight, getBoundaryMinutes } from '../helpers/timeHelpers'\n\n\nexport default function useNewBlockValidation(values, blocks, currentDay) {\n\n  const [errors, setErrors] = useState({})\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  // If the values, blocks, or current day change, re-validate everything.\n  useEffect(() => {\n    const [newBlockStart, newBlockEnd] = getBoundaryMinutes({values})\n\n    const blockIsToday = block => new Date(block.start_time).getDate() === currentDay.getDate();\n\n    /* Turns a block into an object as follows:\n    { block: the block in question,\n      start: bool, true if block conflicts with start time value\n      end: bool, true if block conflicts with end time value\n    }\n    */\n    const makeConflictObject = block => {\n      const [blockStartMins, blockEndMins] = getBoundaryMinutes({block});\n      const badStart = (newBlockStart >= blockStartMins &&\n                        newBlockStart < blockEndMins)\n      const badEnd =   (newBlockEnd > blockStartMins &&\n                        newBlockEnd <= blockEndMins);\n      return {block, start: badStart, end: badEnd};\n    }\n\n    // Get a single conflict object (if it exists)\n    // See previous function for object structure\n    const conflict = blocks && blocks.filter(blockIsToday)\n    .map(makeConflictObject)\n    .filter(conflict => conflict.start || conflict.end)\n    [0];\n\n    // If there are any validation errors, store them in an object.\n    const newErrors = {};\n    if (!values.project)              newErrors.noProject = true;\n    if (newBlockStart >= newBlockEnd) newErrors.endBeforeStart = true;\n    if (conflict)                     newErrors.conflict = conflict;\n\n    setErrors(newErrors)\n  }, [values, blocks, currentDay])\n\n  useEffect(() => {\n    const valid = Object.values(errors).length === 0;\n    setFormIsValid(valid);\n  }, [errors])\n\n\n  return [errors, formIsValid]\n}","import '../styles/Block.css'\nimport { makeTimeString } from '../helpers/stringHelpers'\n\nexport default function Block(props) {\n  const { title, project_id, length, day, start_time, end_time } = props;\n\n  const startTimeStr = makeTimeString(start_time)\n  const endTimeStr = makeTimeString(end_time)\n\n\n  return(\n    <li className=\"block list-group-item\"\n      projectid={project_id}\n    >\n      <h5>{title}</h5>\n      {startTimeStr} to {endTimeStr}\n    </li>\n  )\n}","import Block from './Block'\n\nexport default function BlockList(props) {\n  const { blocks, day } = props;\n\n  const getFifteenMinuteUnits = (start, end) => {\n    const lengthMs = new Date(end) - new Date(start);\n    const lengthMins = lengthMs / 1000 / 60;\n    const fifteenMinuteUnits = lengthMins / 15;\n    return fifteenMinuteUnits;\n  }\n\n  const blocksForDay = blocks && day &&\n    blocks\n    .filter(block => new Date(block.start_time).getDate() === day.getDate())\n    .map(block => (\n      <Block\n        {...block}\n        key={block.id}\n        day={new Date(block.start_time)}\n        length={getFifteenMinuteUnits(block.start_time, block.end_time)}\n      />\n    ))\n\n  return (\n    <ul className=\"blockList list-group ms-2 me-2\">\n      { blocksForDay }\n    </ul>\n  )\n}","import '../styles/DaySchedule.css';\n\nimport Button from 'react-bootstrap/Button';\nimport BlockList from './BlockList'\n\nexport default function DaySchedule(props) {\n\n  // Props:\n  // blocks is an array of Block components.\n  const { blocks, day, tomorrow, yesterday, showForm } = props;\n\n  const dayMap = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednesday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\"\n  }\n\n  const dayString = day && day.toDateString();\n\n  return(\n    <div className=\"daySchedule\">\n      <h3>{dayString}</h3>\n      <Button variant=\"primary\" onClick={showForm}>\n        Make a new block\n      </Button>\n        <div className=\"dayScheduleInternal mt-2\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={yesterday}>{`<--`}</button>\n          <BlockList \n            blocks={blocks}\n            day={day}\n          />\n          <button \n            className=\"btn btn-primary\"\n            onClick={tomorrow}>\n              {`-->`}\n          </button>\n      </div>\n    </div>\n  )\n}","export default function WeekSchedule(props) {\n\n  return (\n    <div>\n      <p>WeekSchedule component</p>\n    </div>\n  )\n}","export default function ProjectListItem(props) {\n  const { id, title, selected, onEditClick, onCancelClick, onSubmit, formValue, handleChange } = props;\n\n  return (\n    <li key={id} className=\"list-group-item d-flex justify-content-between bg-light\">\n      <span><strong>{title}</strong></span>\n      { selected &&\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\" onSubmit={onSubmit}>\n          <div className=\"col-12\">\n            <label className=\"visually-hidden\" htmlFor=\"newName\">New name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm\"\n              id=\"newName\"\n              value={formValue}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div className=\"col-12\">\n          <button className=\"btn btn-sm btn-secondary\">Submit</button>\n          </div>\n          <div className=\"col-12\">\n              <button className=\"btn btn-sm btn-danger\" onClick={onCancelClick}>Cancel</button>\n            </div>\n        </form>\n      }\n      { !selected &&\n        <button\n          className=\"btn btn-sm btn-info\" onClick={onEditClick}>Rename</button>\n      }\n    </li>\n  )\n}","import axios from 'axios';\nimport { useState } from 'react'\n\nimport ProjectListItem from './ProjectListItem'\n\nexport default function ProjectList(props) {\n  const { projects, setProjects } = props;\n\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [formValue, setFormValue] = useState(null);\n  const [showNewProjectForm, setShowNewProjectForm] = useState(false);\n  const [newProjectFormValue, setNewProjectFormValue] = useState(\"\");\n\n  const handleSubmit = (event, id) => {\n    event.preventDefault();\n    const title = formValue !== null ? formValue : projects[id].title;\n    setSelectedProject(null);\n    setFormValue(null);\n    const newProject = {...projects[id], title};\n    setProjects(prev => ({\n      ...prev,\n      [id]: newProject\n    }))\n    axios.patch(`/api/projects/${id}`, { title })\n  }\n\n  const handleCancel = event => {\n    event.preventDefault();\n    setSelectedProject(null);\n  }\n\n  const handleChange = event => {\n    setFormValue(event.target.value);\n  }\n\n  const handleNewProjectFormChange = event => {\n    setNewProjectFormValue(event.target.value);\n  }\n\n  const handleNewProjectSubmit = event => {\n    event.preventDefault();\n    axios.post(`/api/projects`, { projectTitle: newProjectFormValue })\n         .then(res => {\n           const newProject = res.data;\n           setProjects(prev => ({\n             ...prev,\n             [newProject.id]: newProject\n           }))\n         })\n         .then(() => {\n          setNewProjectFormValue(\"\");\n          setShowNewProjectForm(false)\n         })\n  }\n\n  const handleNewProjectCancel = event => {\n    event.preventDefault();\n    setNewProjectFormValue(\"\");\n    setShowNewProjectForm(false)\n  }\n\n  const projectItems = projects && Object.values(projects).map(project => (\n    <ProjectListItem\n      {...project}\n      selected={ project.id === selectedProject}\n      onEditClick={() => setSelectedProject(project.id)}\n      onCancelClick={handleCancel}\n      onSubmit={(event) => handleSubmit(event, project.id)}\n      handleChange={handleChange}\n      formValue={formValue === null ? project.title : formValue}\n    />\n  ))\n\n  return (\n    <div className=\"container\">\n      <h3>My Projects</h3>\n\n      <ul className=\"list-group\">\n        {projectItems}\n      </ul>\n      <div className=\"newProject\">\n        { !showNewProjectForm &&\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setShowNewProjectForm(true)}\n          >\n              Add a Project\n          </button>\n        }\n        { showNewProjectForm &&\n          <form className=\"row row-cols-lg-auto g-3\" onSubmit={handleNewProjectSubmit}>\n            <div className=\"col-12\">\n              <label className=\"visually-hidden\" htmlFor=\"newProject\">New project name:</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                id=\"newProject\"\n                value={newProjectFormValue}\n                onChange={handleNewProjectFormChange}\n              ></input>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-success\" type=\"submit\">Submit</button>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-danger\" type=\"button\" onClick={handleNewProjectCancel}>Cancel</button>\n            </div>\n          </form>\n        }\n      </div>\n    </div>\n\n  )\n}","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default function Reports(props) {\n  const { projects } = props;\n\n  const [reportData, setReportData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`/api/reports/week`)\n         .then(res => setReportData(res.data))\n\n  }, [projects])\n\n  const report = reportData.map(project => {\n    // Totals are returned in seconds.\n    const { project_id, sessions_total, blocks_total } = project\n    const projectName = projects[project_id].title;\n    const secondsToHours = 1/(60*60);\n    const sessionHours = (sessions_total * secondsToHours) || 0\n    const blockHours = (blocks_total * secondsToHours) || 0\n    return (\n    <li key={project_id}>\n      {projectName}: {sessionHours.toPrecision(1)} / {blockHours} hours\n    </li>\n    )\n  })\n\n  return (\n    <div className=\"reports\">\n      <ul>\n        {report}\n      </ul>\n    </div>\n  )\n}","export default function Footer() {\n  return(\n    <div className=\"Footer\">\n      Created by Pladd\n    </div>\n  )\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Block from '../components/Block';\n\nimport { getLastSunday, makeZeroDate } from '../helpers/timeHelpers'\n\n// Ensures that the app always has the Blocks for the current week.\nexport default function useWeeklyBlocks(username) {\n  const today = new Date();\n  makeZeroDate(today);\n  const sunday = getLastSunday(today);\n\n  const [currentDay, setCurrentDay] = useState(today);\n  const [blocks, setBlocks] = useState([]);\n\n  // Uses an array of block objects from the API to create Block components.\n\n\n  // Loads blocks from the API, generates Block components, and sets state.\n  const loadUserBlocks = () => {\n    axios.get(`/api/blocks/week`)\n    .then(res => setBlocks(res.data))\n  }\n\n  // Compare two input days. If one is in a different week than the other,\n  // return true.\n  const checkForNewWeek = (current, newDay) => {\n    const currentSunday = getLastSunday(current);\n    const newSunday = getLastSunday(newDay);\n    if (currentSunday.getDate() !== newSunday.getDate()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Load the current week's blocks any time the username changes\n  useEffect(loadUserBlocks, [username]);\n\n  // Change currentDay by given number of days\n  // i.e. days = 1 gives next day, days = -1 gives prev day\n  // Check for new week and load new blocks if necessary.\n  const changeDay = days => {\n    const msDayMultiplier = 1000*60*60*24;\n    const deltaMs = msDayMultiplier*days;\n    const newDay = new Date(currentDay.valueOf() + deltaMs);\n    const newWeek = checkForNewWeek(currentDay, newDay)\n    if (newWeek) {\n      axios.get(`/api/blocks/week?date=${newDay.toISOString()}`)\n      .then(res => setBlocks(res.data))\n    }\n    setCurrentDay(newDay)\n  }\n\n  const refreshBlocks = () => {\n    axios.get(`/api/blocks/week?date=${currentDay.toISOString()}`)\n      .then(res => setBlocks(res.data))\n  }\n\n  return [blocks, refreshBlocks, currentDay, changeDay];\n}","import '../styles/App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Router components\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Custom components\nimport Header from './Header';\nimport StatusBar from './StatusBar';\nimport Authentication from './Authentication'\n\nimport NewBlockForm from './NewBlockForm';\nimport DaySchedule from './DaySchedule';\nimport WeekSchedule from './WeekSchedule';\nimport ProjectList from './ProjectList';\nimport Reports from './Reports';\nimport Footer from './Footer';\n\n// Custom hooks\nimport useAuthentication from '../hooks/useAuthentication'\nimport useWeeklyBlocks from '../hooks/useWeeklyBlocks';\nimport useSessionTracking from '../hooks/useSessionTracking';\nimport usePopupModal from '../hooks/usePopupModal';\n\nexport default function App() {\n\n\n  const [loading, username, login, logout] = useAuthentication();\n  const [blocks, refreshBlocks, currentDay, changeDay] = useWeeklyBlocks(username);\n  const [currentSession, toggleSession] = useSessionTracking(username);\n  const [showForm, closeForm, show] = usePopupModal();\n  const [projects, setProjects] = useState({})\n\n  useEffect(() => {\n    axios.get('/api/projects')\n         .then(res => {\n           const projectList = {};\n           res.data.projects.forEach(project => projectList[project.id] = project)\n           setProjects(projectList)\n         })\n  }, [username])\n\n  return (\n    <div className=\"App\"\n      onClick={toggleSession}\n    >\n      {/* If we haven't finished trying to log in: */}\n      {loading && <p>Currently loading...</p>}\n\n      {/* If there's no valid login: */}\n      {!loading && !username &&\n        <Authentication login={login} />\n      }\n\n      {/* If we've successfully logged in: */}\n      {!loading && username &&\n        <>\n          <Router basename=\"/capensis\">\n            <Header username={username} handleLogout={logout} currentSession={currentSession} />\n            <StatusBar currentSession={currentSession} projects={projects} />\n            <NewBlockForm \n              show={show}\n              handleShow={showForm}\n              handleClose={closeForm}\n              currentDay={currentDay}\n              projects={projects}\n              blocks={blocks}\n              refreshBlocks={refreshBlocks}\n            />\n            <Switch>\n              <Route exact path={[\"/\", \"/schedule\"]}>\n                <DaySchedule\n                  blocks={blocks}\n                  day={currentDay}\n                  tomorrow={() => changeDay(1)}\n                  yesterday={() => changeDay(-1)}\n                  showForm={showForm}\n                />\n              </Route>\n              <Route exact path=\"/week\" >\n                <WeekSchedule />\n              </Route>\n              <Route exact path=\"/projects\" >\n                <ProjectList projects={projects} setProjects={setProjects} />\n              </Route>\n              <Route exact path=\"/reports\" >\n                <Reports projects={projects} />\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      }\n      <Footer />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useAuthentication() {\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(null);\n\n  // Attempt to authenticate the user if they've logged in previously.\n  useEffect(() => {\n    console.log('authenticating')\n    axios.post('/api/authenticate')\n      .then(res => {\n        setUsername(res.data.username)\n        setLoading(false);\n      })\n  }, []);\n\n  const login = username => {\n    setUsername(username);\n  }\n\n  const logout = event => {\n    event.preventDefault();\n    axios.post(`/api/logout`)\n         .then(res => setUsername(res.data.username))\n  }\n\n  return [loading, username, login, logout];\n}\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nexport default function useSessionTracking(username) {\n  const [currentSession, setCurrentSession] = useState(null);\n\n  useEffect(() => {\n    // When the username changes, ping the server to see if there's an open session.\n    // If there is, load it into the state.\n    axios.get(`/api/sessions/current`)\n         .then(res => {\n           if(res.data[0]) setCurrentSession(res.data[0]);\n         })\n  }, [username])\n\n  const toggleSession = event => {\n    // Try to find the nearest \"block\" class element.\n    const block = event.target.closest('.block')\n\n    // If there is one, then the user clicked on a block.\n    if (block) {\n      // Get the project ID from the block. Cast it to a number for comparison later.\n      const projectId = Number(block.getAttribute('projectid'))\n      // If we have a session running already, ping the API to stop it.\n      if (currentSession) {\n        axios.patch(`/api/sessions`, { session_id: currentSession.id })\n      }\n\n      // If the input matches the currently-tracked session, just stop\n      // the current session without starting a new one.\n      if (currentSession && projectId === currentSession.project_id) {\n        setCurrentSession(null);\n      } else {\n        // Otherwise, ping the API to start a new session and start tracking.\n        axios.post(`/api/sessions`, { project_id: projectId })\n            .then(res => setCurrentSession(res.data))\n      }\n    }\n\n  }\n\n  return [currentSession, toggleSession];\n}","import { useState } from 'react'\n\nexport default function usePopupModal() {\n\n  const [show, setShow] = useState(false);\n\n  const closeForm = () => setShow(false);\n  const showForm = () => setShow(true);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Submit the form and close it\n    setShow(false);\n  }\n\n  return [showForm, closeForm, show]\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport axios from 'axios';\n\nif (process.env.REACT_APP_API_URL) {\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL;\n  axios.defaults.withCredentials = true;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}