{"version":3,"sources":["components/Header.jsx","components/StatusBar.jsx","hooks/useControlledForms.js","helpers/timeHelpers.js","constants/settings.js","constants/strings/index.js","constants/strings/languages/EN-US.js","components/NewBlockForm.jsx","hooks/useNewBlockValidation.js","components/LoginRegister.jsx","components/Block.jsx","components/BlockList.jsx","components/DaySchedule.jsx","components/WeekSchedule.jsx","components/ProjectListItem.jsx","components/ProjectList.jsx","components/Reports.jsx","hooks/useWeeklyBlocks.js","components/App.jsx","hooks/useAuthentication.js","hooks/useSessionTracking.js","hooks/usePopupModal.js","index.js"],"names":["Header","props","username","handleLogout","currentSession","className","to","type","id","onClick","StatusBar","projects","tracking","undefined","projectsLoaded","project_id","projectTitle","title","useControlledForms","fields","useState","formValues","setFormValues","event","preventDefault","prev","newVals","target","name","value","getLastSunday","date","msSinceSunday","getDay","lastSundayMs","valueOf","Date","minutesSinceMidnight","hours","minutes","getBoundaryMinutes","values","block","startHours","Number","startHour","startAMPM","startMinutes","startMinute","endHours","endHour","endAMPM","endMinutes","endMinute","startMins","endMins","console","log","getFormValuesBoundaryMinutes","start","start_time","end","end_time","getHours","getMinutes","getBlockBoundaryMinutes","SETTINGS","LANGUAGES","EN_US","STRINGS","NEW_BLOCK_VALIDATION","conflict","startStr","toLocaleTimeString","endStr","noProject","endBeforeStart","NewBlockForm","show","handleClose","currentDay","blocks","refreshBlocks","project","handleChange","errors","setErrors","formIsValid","setFormIsValid","useEffect","newBlockStart","newBlockEnd","filter","getDate","map","blockStartMins","blockEndMins","newErrors","valid","Object","length","useNewBlockValidation","showErrors","setShowErrors","LANG","currentDateText","toDateString","projectOptions","reverse","hoursOptions","optionsList","hour","push","errorList","keys","errorType","handleSubmit","a","startDateMs","endDateMs","startTime","toISOString","endTime","axios","post","then","Modal","onHide","closeButton","Title","Body","onSubmit","htmlFor","onChange","Footer","Button","variant","LoginRegister","setUsername","loginUsername","loginPass","registerUsername","registerPass","handleFormChange","rawPassword","res","data","class","Block","day","startTimeStr","endTimeStr","projectid","BlockList","blocksForDay","key","DaySchedule","tomorrow","yesterday","showForm","WeekSchedule","ProjectListItem","selected","onEditClick","onCancelClick","formValue","ProjectList","setProjects","selectedProject","setSelectedProject","setFormValue","showNewProjectForm","setShowNewProjectForm","newProjectFormValue","setNewProjectFormValue","handleCancel","projectItems","newProject","patch","Reports","reportData","setReportData","get","report","sessions_total","blocks_total","projectName","secondsToHours","sessionHours","blockHours","toPrecision","useWeeklyBlocks","today","setHours","setMinutes","setSeconds","setMilliseconds","setCurrentDay","setBlocks","days","deltaMs","newDay","current","currentSunday","newSunday","checkForNewWeek","App","loading","setLoading","useAuthentication","logout","changeDay","setCurrentSession","closest","projectId","getAttribute","session_id","useSessionTracking","toggleSession","setShow","usePopupModal","closeForm","projectList","forEach","basename","handleShow","exact","path","defaults","baseURL","process","withCredentials","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5fcd284.chunk.js","sourcesContent":["// Router components\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default function Header(props) {\n  const { username, handleLogout, currentSession } = props;\n\n  return(\n    <div className=\"navbar navbar-expand-sm navbar-light bg-info\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Capensis</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/schedule\">Schedule</NavLink>\n            </li>\n            {/* <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/week\">Week</NavLink>\n            </li> */}\n            <li className=\"nav-item\">\n              <NavLink to=\"/projects\" className=\"nav-link\">Projects</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/reports\">Reports</NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"d-flex\">\n          <span className=\"navbar-text me-2\">Logged in as {username}</span>\n          <button className=\"btn btn-outline-dark\" onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import '../styles/StatusBar.css';\n\nexport default function StatusBar(props) {\n  const { currentSession, projects} = props;\n  const tracking = currentSession.id !== undefined;\n  const projectsLoaded = projects[currentSession.project_id] !== undefined;\n  const projectTitle = tracking && projectsLoaded && projects[currentSession.project_id].title\n\n  return (\n    <div className={`statusBar mb-2 border-top border-info\n      ${tracking ? 'bg-warning' : 'bg-info'}`}>\n      { currentSession.id &&\n        `Currently tracking ${projectTitle}`\n      }\n      { !currentSession.id &&\n        `Not currently tracking`\n      }\n    </div>\n  )\n}","import { useState } from 'react';\n\nexport default function useControlledForms(fields) {\n  const [formValues, setFormValues] = useState(fields)\n\n  const handleFormChange = event => {\n    event.preventDefault();\n    setFormValues(prev => {\n      const newVals = {...prev};\n      newVals[event.target.name] = event.target.value;\n      return newVals;\n    })\n  }\n\n  return [formValues, handleFormChange]\n}","\nconst msDayMultiplier = 1000*60*60*24;\n\n// Given a Date object, return a Date object of the last Sunday.\nexport function getLastSunday(date) {\n// Get Sunday for this week.\nconst daysSinceSunday = date.getDay(); // Returns 0 for sunday, 1 for Monday, etc\nconst msSinceSunday = msDayMultiplier * daysSinceSunday;\nconst lastSundayMs = date.valueOf() - msSinceSunday;\nreturn new Date(lastSundayMs);\n}\n\n// Set h/min/s/ms of a given date to 0.\nexport function makeZeroDate(date) {\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n}\n\nexport function minutesSinceMidnight (hours, minutes) {\n  return (hours * 60) + minutes;\n}\n\n// Internal helper function to allow getBoundaryMinutes to handle different options\nfunction getFormValuesBoundaryMinutes(values) {\n  const startHours = Number(values.startHour) + Number(values.startAMPM);\n  const startMinutes = Number(values.startMinute)\n  const endHours = Number(values.endHour) + Number(values.endAMPM);\n  const endMinutes = Number(values.endMinute)\n  const startMins = minutesSinceMidnight(startHours, startMinutes);\n  const endMins = minutesSinceMidnight(endHours, endMinutes);\n  console.log(`getFormValuesBoundaryMinutes found: ${startMins}, ${endMins}`);\n  return [startMins, endMins]\n}\n\nfunction getBlockBoundaryMinutes(block) {\n  const start = new Date(block.start_time);\n  const end = new Date(block.end_time);\n  const startMins = minutesSinceMidnight(start.getHours(), start.getMinutes())\n  const endMins = minutesSinceMidnight(end.getHours(), end.getMinutes())\n  return [startMins, endMins]\n}\n\nexport function getBoundaryMinutes({values, block}) {\n  if (values) return getFormValuesBoundaryMinutes(values);\n  if (block) return getBlockBoundaryMinutes(block)\n}\n","const SETTINGS = {\n  LANGUAGES: {\n    EN_US: \"EN_US\"\n  }\n}\n\nexport default SETTINGS;","import EN_US from './languages/EN-US'\n\nconst STRINGS = {\n  EN_US,\n}\n\nexport default STRINGS;","const EN_US = {\n  NEW_BLOCK_VALIDATION: {\n    conflict: ({block}) => {\n      const {title, start_time, end_time} = block;\n      const startStr = new Date(start_time).toLocaleTimeString();\n      const endStr = new Date(end_time).toLocaleTimeString();\n      console.log(start_time)\n      return `This time conflicts with another block: ${title}, ${startStr} - ${endStr}`\n    },\n    noProject: () => \"You must select a project.\",\n    endBeforeStart: () => \"That block would end on or before its start time.\"\n  }\n}\n\nexport default EN_US;","import { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport useControlledForms from '../hooks/useControlledForms';\nimport useNewBlockValidation from '../hooks/useNewBlockValidation';\n\nimport SETTINGS from '../constants/settings'\nimport STRINGS from '../constants/strings'\n\nimport { getBoundaryMinutes } from '../helpers/timeHelpers'\n\nexport default function NewBlockForm(props) {\n  const { show, handleClose, currentDay, projects, blocks, refreshBlocks } = props;\n\n  const [values, handleChange] = useControlledForms({\n    project: \"\",\n    startHour: \"6\",\n    startMinute: \"00\",\n    startAMPM: \"0\",\n    endHour: \"6\",\n    endMinute: \"00\",\n    endAMPM: \"0\"\n  });\n\n  const [errors, formIsValid] = useNewBlockValidation(values, blocks, currentDay)\n  const [showErrors, setShowErrors] = useState(false);\n\n  const LANG = SETTINGS.LANGUAGES.EN_US;\n  const currentDateText = currentDay.toDateString();\n\n  // Make the options lists for the form <select> tags\n  const projectOptions = Object.values(projects).reverse().map(project => (\n    <option value={project.id} key={project.id}>{project.title}</option>\n  ));\n\n  // Note that hoursOptions creates an anonymous function and then\n  // runs it immediately.\n  const hoursOptions = function() {\n    const optionsList = [];\n    for(let hour = 1; hour <= 12; hour++) {\n      // The 12 hour should display as 12, but has a value of 0 for time calculations.\n      // The PM value accounts for the 12-hour offset for noon.\n      // (i.e. 12:00 AM is 00:00 (0 hours for '12' + 0 hours for 'AM'\n      //  and 12:00 PM is 12:00 (0 hours for '12', 12 hours for 'PM'))\n      optionsList.push(\n        <option\n          value={hour === 12 ? 0 : hour}\n          key={hour === 12 ? 0 : hour}\n        >\n            {hour}\n        </option>)\n    }\n    return optionsList;\n  }()\n  const errorList = Object.keys(errors)\n                          .map(errorType => {\n                            console.log('making error list for :', errorType)\n                            console.log('using:', STRINGS[LANG].NEW_BLOCK_VALIDATION[errorType])\n                            return (\n                   <li key={errorType}>\n                     {STRINGS[LANG].NEW_BLOCK_VALIDATION[errorType](errors[errorType])}\n                   </li>\n                 )})\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      setShowErrors(true);\n    } else {\n      setShowErrors(false);\n      // Turn the raw values into ISO strings to send\n      const [startMins, endMins] = getBoundaryMinutes({values});\n      const startDateMs = currentDay.valueOf() + (startMins * 60 * 1000);\n      const endDateMs = currentDay.valueOf() + (endMins * 60 * 1000);\n      const startTime = new Date(startDateMs).toISOString();\n      const endTime = new Date(endDateMs).toISOString();\n      axios.post('/api/blocks', { startTime, endTime, project: values.project})\n           .then(refreshBlocks)\n           .then(handleClose)\n    }\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Schedule a new Block</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Date: <strong>{currentDateText}</strong>\n        <form onSubmit={handleSubmit}>\n          <div className=\"row row-cols-sm-auto g-5 align-items-center\">\n            <label htmlFor=\"project\">Project</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"project\" id=\"project\" value={values.project} onChange={handleChange}>\n                <option value=\"\">Select a project</option>\n                {projectOptions}\n              </select>\n            </div>\n          </div>\n          <div className=\"row row-cols-lg-auto g-2 mt-1 align-items-center\">\n            <label htmlFor=\"startHour\">Starting at:</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startHour\" id=\"startHour\" value={values.startHour} onChange={handleChange}>\n                {hoursOptions}\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startMinute\" id=\"startMinute\" value={values.startMinute} onChange={handleChange}>\n                <option>00</option>\n                <option>15</option>\n                <option>30</option>\n                <option>45</option>\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startAMPM\" id=\"startAMPM\" value={values.startAMPM} onChange={handleChange}>\n                <option value=\"0\">AM</option>\n                <option value=\"12\">PM</option>\n              </select>\n            </div>\n            {showErrors && errors.conflict && errors.conflict.start &&\n             (<small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n             That start time conflicts with an existing Block!\n             </small>)}\n          </div>\n          <div className=\"row row-cols-lg-auto g-2 mt-1 align-items-center\">\n            <label>Ending at:</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"endHour\" id=\"endHour\" value={values.endHour} onChange={handleChange}>\n                {hoursOptions}\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"endMinute\" id=\"endMinute\" value={values.endMinute} onChange={handleChange}>\n                <option>00</option>\n                <option>15</option>\n                <option>30</option>\n                <option>45</option>\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"endAMPM\" id=\"endAMPM\" value={values.endAMPM} onChange={handleChange}>\n                <option value=\"0\">AM</option>\n                <option value=\"12\">PM</option>\n              </select>\n            </div>\n            {showErrors && errors.conflict && errors.conflict.end &&\n             (<small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n             That end time conflicts with an existing Block!\n             </small>)}\n          </div>\n        </form>\n        </Modal.Body>\n          {showErrors && errorList.length !== 0 && (\n            <Modal.Footer><ul>{errorList}</ul></Modal.Footer>\n          )}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nimport { minutesSinceMidnight, getBoundaryMinutes } from '../helpers/timeHelpers'\n\n\nexport default function useNewBlockValidation(values, blocks, currentDay) {\n\n  const [errors, setErrors] = useState({})\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  // If the values, blocks, or current day change, re-validate everything.\n  useEffect(() => {\n    const [newBlockStart, newBlockEnd] = getBoundaryMinutes({values})\n\n    const blockIsToday = block => new Date(block.start_time).getDate() === currentDay.getDate();\n\n    /* Turns a block into an object as follows:\n    { block: the block in question,\n      start: bool, true if block conflicts with start time value\n      end: bool, true if block conflicts with end time value\n    }\n    */\n    const makeConflictObject = block => {\n      const [blockStartMins, blockEndMins] = getBoundaryMinutes({block});\n      const badStart = (newBlockStart >= blockStartMins &&\n                        newBlockStart < blockEndMins)\n      const badEnd =   (newBlockEnd > blockStartMins &&\n                        newBlockEnd <= blockEndMins);\n      return {block, start: badStart, end: badEnd};\n    }\n\n    // Get a single conflict object (if it exists)\n    // See previous function for object structure\n    const conflict = blocks.filter(blockIsToday)\n    .map(makeConflictObject)\n    .filter(conflict => conflict.start || conflict.end)\n    [0];\n\n    // If there are any validation errors, store them in an object.\n    const newErrors = {};\n    if (!values.project)              newErrors.noProject = true;\n    if (newBlockStart >= newBlockEnd) newErrors.endBeforeStart = true;\n    if (conflict)                     newErrors.conflict = conflict;\n\n    setErrors(newErrors)\n  }, [values, blocks, currentDay])\n\n  useEffect(() => {\n    const valid = Object.values(errors).length === 0;\n    console.log('form valid: ', valid)\n    setFormIsValid(valid);\n  }, [errors])\n\n\n  return [errors, formIsValid]\n}","import axios from 'axios';\nimport useControlledForms from '../hooks/useControlledForms';\n\nexport default function LoginRegister(props) {\n\n  const { setUsername } = props;\n\n  const [formValues, handleFormChange] = useControlledForms({\n    loginUsername: \"\",\n    loginPass: \"\",\n    registerUsername: \"\",\n    registerPass: \"\"\n  });\n\n  const handleLogin = event => {\n    event.preventDefault();\n    const { loginUsername, loginPass } = formValues;\n    axios.post(`/api/login`, {username: loginUsername, rawPassword: loginPass})\n         .then(res => setUsername(res.data.username))\n  }\n\n  const handleRegister = event => {\n    event.preventDefault();\n    const { registerUsername, registerPass } = formValues;\n    axios.post(`/api/users`, {username: registerUsername, rawPassword: registerPass})\n         .then(res => setUsername(res.data.username))\n  }\n\n\n  return (\n    <div className=\"login-register\">\n      <div className=\"login m-2\">\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\"\n          onSubmit={handleLogin}>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"loginUsername\">Username: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"loginUsername\" type=\"text\" value={formValues.loginUsername} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"loginPass\">Password: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"loginPass\" type=\"password\" value={formValues.loginPass} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <button class=\"btn btn-success\">Login</button>\n          </div>\n        </form>\n      </div>\n      <div className=\"register m-2\">\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\"\n          onSubmit={handleRegister}>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"registerUsername\">Username: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"registerUsername\" type=\"text\" value={formValues.registerUsername} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"registerPass\">Password: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"registerPass\" type=\"password\" value={formValues.registerPass} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <button className=\"btn btn-success\">Register</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}","import '../styles/Block.css'\n\nexport default function Block(props) {\n  const { title, project_id, length, day, start_time, end_time } = props;\n\n  const startTimeStr = new Date(start_time).toLocaleTimeString();\n  const endTimeStr = new Date(end_time).toLocaleTimeString();\n\n  return(\n    <li className=\"block list-group-item\"\n      projectid={project_id}\n    >\n      <h5>{title}</h5>\n      From: {startTimeStr} to {endTimeStr}\n    </li>\n  )\n}","import Block from './Block'\n\nexport default function BlockList(props) {\n  const { blocks, day } = props;\n\n  const getFifteenMinuteUnits = (start, end) => {\n    const lengthMs = new Date(end) - new Date(start);\n    const lengthMins = lengthMs / 1000 / 60;\n    const fifteenMinuteUnits = lengthMins / 15;\n    return fifteenMinuteUnits;\n  }\n\n  const blocksForDay = blocks\n    .filter(block => new Date(block.start_time).getDate() === day.getDate())\n    .map(block => (\n      <Block\n        {...block}\n        key={block.id}\n        day={new Date(block.start_time)}\n        length={getFifteenMinuteUnits(block.start_time, block.end_time)}\n      />\n    ))\n\n  return (\n    <ul className=\"blockList list-group ms-2 me-2\">\n      { blocksForDay }\n    </ul>\n  )\n}","import '../styles/DaySchedule.css';\n\nimport Button from 'react-bootstrap/Button';\nimport BlockList from './BlockList'\n\nexport default function DaySchedule(props) {\n\n  // Props:\n  // blocks is an array of Block components.\n  const { blocks, day, tomorrow, yesterday, showForm } = props;\n  const dayMap = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednesday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\"\n  }\n\n  return(\n    <div className=\"daySchedule\">\n      <h3>{day.toDateString()}</h3>\n      <Button variant=\"primary\" onClick={showForm}>\n        Make a new block\n      </Button>\n        <div className=\"dayScheduleInternal mt-2\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={yesterday}>{`<--`}</button>\n          <BlockList \n            blocks={blocks}\n            day={day}\n          />\n          <button \n            className=\"btn btn-primary\"\n            onClick={tomorrow}>\n              {`-->`}\n          </button>\n      </div>\n    </div>\n  )\n}","export default function WeekSchedule(props) {\n\n  return (\n    <div>\n      <p>WeekSchedule component</p>\n    </div>\n  )\n}","export default function ProjectListItem(props) {\n  const { id, title, selected, onEditClick, onCancelClick, onSubmit, formValue, handleChange } = props;\n\n  return (\n    <li key={id} className=\"list-group-item d-flex justify-content-between bg-light\">\n      <span><strong>{title}</strong></span>\n      { selected &&\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\" onSubmit={onSubmit}>\n          <div className=\"col-12\">\n            <label className=\"visually-hidden\" htmlFor=\"newName\">New name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm\"\n              id=\"newName\"\n              value={formValue}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div className=\"col-12\">\n          <button className=\"btn btn-sm btn-secondary\">Submit</button>\n          </div>\n          <div className=\"col-12\">\n              <button className=\"btn btn-sm btn-danger\" onClick={onCancelClick}>Cancel</button>\n            </div>\n        </form>\n      }\n      { !selected &&\n        <button\n          className=\"btn btn-sm btn-info\" onClick={onEditClick}>Rename</button>\n      }\n    </li>\n  )\n}","import axios from 'axios';\nimport { useState } from 'react'\n\nimport ProjectListItem from './ProjectListItem'\n\nexport default function ProjectList(props) {\n  const { projects, setProjects } = props;\n\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [formValue, setFormValue] = useState(null);\n  const [showNewProjectForm, setShowNewProjectForm] = useState(false);\n  const [newProjectFormValue, setNewProjectFormValue] = useState(\"\");\n\n  const handleSubmit = (event, id) => {\n    event.preventDefault();\n    const title = formValue !== null ? formValue : projects[id].title;\n    setSelectedProject(null);\n    setFormValue(null);\n    const newProject = {...projects[id], title};\n    setProjects(prev => ({\n      ...prev,\n      [id]: newProject\n    }))\n    axios.patch(`/api/projects/${id}`, { title })\n  }\n\n  const handleCancel = event => {\n    event.preventDefault();\n    setSelectedProject(null);\n  }\n\n  const handleChange = event => {\n    setFormValue(event.target.value);\n  }\n\n  const handleNewProjectFormChange = event => {\n    setNewProjectFormValue(event.target.value);\n  }\n\n  const handleNewProjectSubmit = event => {\n    event.preventDefault();\n    axios.post(`/api/projects`, { projectTitle: newProjectFormValue })\n         .then(res => {\n           const newProject = res.data;\n           setProjects(prev => ({\n             ...prev,\n             [newProject.id]: newProject\n           }))\n         })\n         .then(() => {\n          setNewProjectFormValue(\"\");\n          setShowNewProjectForm(false)\n         })\n  }\n\n  const handleNewProjectCancel = event => {\n    event.preventDefault();\n    setNewProjectFormValue(\"\");\n    setShowNewProjectForm(false)\n  }\n\n  const projectItems = Object.values(projects).map(project => (\n    <ProjectListItem\n      {...project}\n      selected={ project.id === selectedProject}\n      onEditClick={() => setSelectedProject(project.id)}\n      onCancelClick={handleCancel}\n      onSubmit={(event) => handleSubmit(event, project.id)}\n      handleChange={handleChange}\n      formValue={formValue === null ? project.title : formValue}\n    />\n  ))\n\n  return (\n    <div className=\"container\">\n      <h3>My Projects</h3>\n\n      <ul className=\"list-group\">\n        {projectItems}\n      </ul>\n      <div className=\"newProject\">\n        { !showNewProjectForm &&\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setShowNewProjectForm(true)}\n          >\n              Add a Project\n          </button>\n        }\n        { showNewProjectForm &&\n          <form className=\"row row-cols-lg-auto g-3\" onSubmit={handleNewProjectSubmit}>\n            <div className=\"col-12\">\n              <label className=\"visually-hidden\" htmlFor=\"newProject\">New project name:</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                id=\"newProject\"\n                value={newProjectFormValue}\n                onChange={handleNewProjectFormChange}\n              ></input>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-success\" type=\"submit\">Submit</button>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-danger\" type=\"button\" onClick={handleNewProjectCancel}>Cancel</button>\n            </div>\n          </form>\n        }\n      </div>\n    </div>\n\n  )\n}","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default function Reports(props) {\n  const { projects } = props;\n\n  const [reportData, setReportData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`/api/reports/week`)\n         .then(res => setReportData(res.data))\n\n  }, [projects])\n\n  const report = reportData.map(project => {\n    // Totals are returned in seconds.\n    const { project_id, sessions_total, blocks_total } = project\n    const projectName = projects[project_id].title;\n    const secondsToHours = 1/(60*60);\n    const sessionHours = (sessions_total * secondsToHours) || 0\n    const blockHours = (blocks_total * secondsToHours) || 0\n    return (\n    <li key={project_id}>\n      {projectName}: {sessionHours.toPrecision(1)} / {blockHours} hours\n    </li>\n    )\n  })\n\n  return (\n    <div className=\"reports\">\n      <ul>\n        {report}\n      </ul>\n    </div>\n  )\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Block from '../components/Block';\n\nimport { getLastSunday, makeZeroDate } from '../helpers/timeHelpers'\n\n// Ensures that the app always has the Blocks for the current week.\nexport default function useWeeklyBlocks(username) {\n  const today = new Date();\n  makeZeroDate(today);\n  const sunday = getLastSunday(today);\n\n  const [currentDay, setCurrentDay] = useState(today);\n  const [blocks, setBlocks] = useState([]);\n\n  // Uses an array of block objects from the API to create Block components.\n\n\n  // Loads blocks from the API, generates Block components, and sets state.\n  const loadUserBlocks = () => {\n    axios.get(`/api/blocks/week`)\n    .then(res => setBlocks(res.data))\n  }\n\n  // Compare two input days. If one is in a different week than the other,\n  // return true.\n  const checkForNewWeek = (current, newDay) => {\n    const currentSunday = getLastSunday(current);\n    const newSunday = getLastSunday(newDay);\n    if (currentSunday.getDate() !== newSunday.getDate()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Load the current week's blocks any time the username changes\n  useEffect(loadUserBlocks, [username]);\n\n  // Change currentDay by given number of days\n  // i.e. days = 1 gives next day, days = -1 gives prev day\n  // Check for new week and load new blocks if necessary.\n  const changeDay = days => {\n    const msDayMultiplier = 1000*60*60*24;\n    const deltaMs = msDayMultiplier*days;\n    const newDay = new Date(currentDay.valueOf() + deltaMs);\n    const newWeek = checkForNewWeek(currentDay, newDay)\n    if (newWeek) {\n      axios.get(`/api/blocks/week?date=${newDay.toISOString()}`)\n      .then(res => setBlocks(res.data))\n    }\n    setCurrentDay(newDay)\n  }\n\n  const refreshBlocks = () => {\n    axios.get(`/api/blocks/week?date=${currentDay.toISOString()}`)\n      .then(res => setBlocks(res.data))\n  }\n\n  return [blocks, refreshBlocks, currentDay, changeDay];\n}","import '../styles/App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Router components\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Custom components\nimport Header from './Header';\nimport StatusBar from './StatusBar';\nimport NewBlockForm from './NewBlockForm';\nimport LoginRegister from './LoginRegister';\nimport DaySchedule from './DaySchedule';\nimport WeekSchedule from './WeekSchedule';\nimport ProjectList from './ProjectList';\nimport Reports from './Reports';\n\n// Custom hooks\nimport useAuthentication from '../hooks/useAuthentication'\nimport useWeeklyBlocks from '../hooks/useWeeklyBlocks';\nimport useSessionTracking from '../hooks/useSessionTracking';\nimport usePopupModal from '../hooks/usePopupModal';\n\nexport default function App() {\n\n\n  const [loading, username, setUsername, logout] = useAuthentication();\n  const [blocks, refreshBlocks, currentDay, changeDay] = useWeeklyBlocks(username);\n  const [currentSession, toggleSession] = useSessionTracking(username);\n  const [showForm, closeForm, show] = usePopupModal();\n  const [projects, setProjects] = useState({})\n\n  useEffect(() => {\n    axios.get('/api/projects')\n         .then(res => {\n           const projectList = {};\n           res.data.projects.forEach(project => projectList[project.id] = project)\n           setProjects(projectList)\n         })\n  }, [username])\n\n  return (\n    <div className=\"App\"\n      onClick={toggleSession}\n    >\n      {/* If we haven't finished trying to log in: */}\n      {loading && <p>Currently loading...</p>}\n\n      {/* If there's no valid login: */}\n      {!loading && !username &&\n        <LoginRegister setUsername={setUsername} />\n      }\n\n      {/* If we've successfully logged in: */}\n      {!loading && username &&\n        <>\n          <Router basename=\"/capensis\">\n            <Header username={username} handleLogout={logout} currentSession={currentSession} />\n            <StatusBar currentSession={currentSession} projects={projects} />\n            <NewBlockForm \n              show={show}\n              handleShow={showForm}\n              handleClose={closeForm}\n              currentDay={currentDay}\n              projects={projects}\n              blocks={blocks}\n              refreshBlocks={refreshBlocks}\n            />\n            <Switch>\n              <Route exact path={[\"/\", \"/schedule\"]}>\n                <DaySchedule\n                  blocks={blocks}\n                  day={currentDay}\n                  tomorrow={() => changeDay(1)}\n                  yesterday={() => changeDay(-1)}\n                  showForm={showForm}\n                />\n              </Route>\n              <Route exact path=\"/week\" >\n                <WeekSchedule />\n              </Route>\n              <Route exact path=\"/projects\" >\n                <ProjectList projects={projects} setProjects={setProjects} />\n              </Route>\n              <Route exact path=\"/reports\" >\n                <Reports projects={projects} />\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useAuthentication() {\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(null);\n\n  // Attempt to authenticate the user if they've logged in previously.\n  useEffect(() => {\n    axios.post('/api/authenticate')\n      .then(res => {\n        setUsername(res.data.username)\n        setLoading(false);\n      })\n  }, []);\n\n  const logout = event => {\n    event.preventDefault();\n    axios.post(`/api/logout`)\n         .then(res => setUsername(res.data.username))\n  }\n\n  return [loading, username, setUsername, logout];\n}\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nexport default function useSessionTracking(username) {\n  const [currentSession, setCurrentSession] = useState({});\n\n  useEffect(() => {\n    // When the username changes, ping the server to see if there's an open session.\n    // If there is, load it into the state.\n    axios.get(`/api/sessions/current`)\n         .then(res => {\n           if(res.data[0]) setCurrentSession(res.data[0]);\n         })\n  }, [username])\n\n  const toggleSession = event => {\n    // Try to find the nearest \"block\" class element.\n    const block = event.target.closest('.block')\n\n    // If there is one, then the user clicked on a block.\n    if (block) {\n      // Get the project ID from the block. Cast it to a number for comparison later.\n      const projectId = Number(block.getAttribute('projectid'))\n      // If we have a session running already, ping the API to stop it.\n      if (currentSession.id) {\n        axios.patch(`/api/sessions`, { session_id: currentSession.id })\n      }\n\n      // If the input matches the currently-tracked session, just stop\n      // the current session without starting a new one.\n      if (projectId === currentSession.project_id) {\n        setCurrentSession({});\n      } else {\n        // Otherwise, ping the API to start a new session and start tracking.\n        axios.post(`/api/sessions`, { project_id: projectId })\n            .then(res => setCurrentSession(res.data))\n      }\n    }\n\n  }\n\n  return [currentSession, toggleSession];\n}","import { useState } from 'react'\n\nexport default function usePopupModal() {\n\n  const [show, setShow] = useState(false);\n\n  const closeForm = () => setShow(false);\n  const showForm = () => setShow(true);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Submit the form and close it\n    setShow(false);\n  }\n\n  return [showForm, closeForm, show]\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport axios from 'axios';\n\nif (process.env.REACT_APP_API_URL) {\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL;\n  axios.defaults.withCredentials = true;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}