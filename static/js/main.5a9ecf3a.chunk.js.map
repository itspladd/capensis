{"version":3,"sources":["components/Header.jsx","components/StatusBar.jsx","hooks/useControlledForms.js","components/NewBlockForm.jsx","components/LoginRegister.jsx","components/Block.jsx","components/BlockList.jsx","components/DaySchedule.jsx","components/WeekSchedule.jsx","components/ProjectListItem.jsx","components/ProjectList.jsx","components/Reports.jsx","helpers/dayHelpers.js","hooks/useWeeklyBlocks.js","components/App.jsx","hooks/useAuthentication.js","hooks/useSessionTracking.js","hooks/usePopupModal.js","index.js"],"names":["Header","props","username","handleLogout","currentSession","className","to","type","id","onClick","StatusBar","projects","tracking","undefined","projectTitle","project_id","title","useControlledForms","fields","useState","formValues","setFormValues","event","preventDefault","prev","newVals","target","name","value","console","log","NewBlockForm","show","handleClose","handleShow","currentDay","blocks","refreshBlocks","badStart","setBadStart","badEnd","setBadEnd","valid","msg","submitStatus","setSubmitStatus","project","startHour","startMinute","startAMPM","endHour","endMinute","endAMPM","values","handleChange","currentDateText","toDateString","minutesSinceMidnight","hours","minutes","getBoundaryMinutes","useCallback","startHours","Number","startMinutes","endHours","endMinutes","handleSubmit","a","startMins","endMins","startDateMs","valueOf","endDateMs","startTime","Date","toISOString","endTime","axios","post","then","res","useEffect","filter","block","start_time","getDate","forEach","blockStart","blockEnd","end_time","blockStartMins","getHours","getMinutes","blockEndMins","projectOptions","Object","reverse","map","hoursOptions","optionsList","i","push","Modal","onHide","closeButton","Title","Body","onSubmit","for","class","onChange","Footer","Button","variant","LoginRegister","setUsername","loginUsername","loginPass","registerUsername","registerPass","handleFormChange","rawPassword","data","htmlFor","Block","length","day","startTimeStr","toLocaleTimeString","endTimeStr","projectid","BlockList","blocksForDay","start","end","DaySchedule","tomorrow","yesterday","showForm","WeekSchedule","ProjectListItem","selected","onEditClick","onCancelClick","formValue","ProjectList","setProjects","selectedProject","setSelectedProject","setFormValue","showNewProjectForm","setShowNewProjectForm","newProjectFormValue","setNewProjectFormValue","handleCancel","projectItems","newProject","patch","Reports","reportData","setReportData","get","report","sessions_total","blocks_total","projectName","secondsToHours","sessionHours","blockHours","toPrecision","getLastSunday","date","msSinceSunday","getDay","lastSundayMs","useWeeklyBlocks","today","setHours","setMinutes","setSeconds","setMilliseconds","setCurrentDay","setBlocks","days","deltaMs","newDay","current","currentSunday","newSunday","checkForNewWeek","App","loading","setLoading","useAuthentication","logout","changeDay","setCurrentSession","closest","projectId","getAttribute","session_id","useSessionTracking","toggleSession","setShow","usePopupModal","closeForm","projectList","basename","exact","path","process","defaults","baseURL","withCredentials","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a9ecf3a.chunk.js","sourcesContent":["// Router components\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default function Header(props) {\n  const { username, handleLogout, currentSession } = props;\n\n  return(\n    <div className=\"navbar navbar-expand-sm navbar-light bg-info\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Timekeeper</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/schedule\">Schedule</NavLink>\n            </li>\n            {/* <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/week\">Week</NavLink>\n            </li> */}\n            <li className=\"nav-item\">\n              <NavLink to=\"/projects\" className=\"nav-link\">Projects</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/reports\">Reports</NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"d-flex\">\n          <span className=\"navbar-text me-2\">Logged in as {username}</span>\n          <button className=\"btn btn-outline-dark\" onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import '../styles/StatusBar.css';\n\nexport default function StatusBar(props) {\n  const { currentSession, projects} = props;\n\n  const tracking = currentSession.id !== undefined;\n  const projectTitle = tracking && projects[currentSession.project_id].title\n\n  return (\n    <div className={`statusBar mb-2 border-top border-info\n      ${tracking ? 'bg-warning' : 'bg-info'}`}>\n      { currentSession.id &&\n        `Currently tracking ${projectTitle}`\n      }\n      { !currentSession.id &&\n        `Not currently tracking`\n      }\n    </div>\n  )\n}","import { useState } from 'react';\n\nexport default function useControlledForms(fields) {\n  const [formValues, setFormValues] = useState(fields)\n\n  const handleFormChange = event => {\n    event.preventDefault();\n    setFormValues(prev => {\n      const newVals = {...prev};\n      newVals[event.target.name] = event.target.value;\n      console.log(newVals)\n      return newVals;\n    })\n  }\n\n  return [formValues, handleFormChange]\n}","import { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport useControlledForms from '../hooks/useControlledForms';\n\nexport default function NewBlockForm(props) {\n  const { show, handleShow, handleClose, currentDay, projects, blocks, refreshBlocks } = props;\n\n  const [badStart, setBadStart] = useState(false);\n  const [badEnd, setBadEnd] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState({\n    valid: true,\n    msg: \"\"\n  })\n  const [values, handleChange] = useControlledForms({\n    project: \"\",\n    startHour: \"6\",\n    startMinute: \"00\",\n    startAMPM: \"0\",\n    endHour: \"6\",\n    endMinute: \"00\",\n    endAMPM: \"0\"\n  });\n\n  const currentDateText = currentDay.toDateString();\n\n  const minutesSinceMidnight = (hours, minutes) => (hours * 60) + minutes;\n\n  const getBoundaryMinutes = useCallback(values => {\n    const startHours = Number(values.startHour) + Number(values.startAMPM);\n    const startMinutes = Number(values.startMinute)\n    const endHours = Number(values.endHour) + Number(values.endAMPM);\n    const endMinutes = Number(values.endMinute)\n    const startMins = minutesSinceMidnight(startHours, startMinutes);\n    const endMins = minutesSinceMidnight(endHours, endMinutes);\n\n    return [startMins, endMins]\n  }, [])\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const [startMins, endMins] = getBoundaryMinutes(values);\n    let valid, msg;\n    if (startMins > endMins) {\n      valid = false;\n      msg = \"Submit failed - that block starts before its end time!\";\n    } else if (badStart || badEnd) {\n      valid = false;\n      msg = \"Submit failed - your start or end time conflicts with an existing block.\"\n    } else if (values.project === \"\") {\n      valid = false;\n      msg = \"Submit failed - select a project first!\"\n    } else {\n      valid = true;\n      msg = \"Validation successful, submitting!\"\n      // Turn the raw values into ISO strings to send\n      const startDateMs = currentDay.valueOf() + (startMins * 60 * 1000);\n      const endDateMs = currentDay.valueOf() + (endMins * 60 * 1000);\n      const startTime = new Date(startDateMs).toISOString();\n      const endTime = new Date(endDateMs).toISOString();\n\n      axios.post('/api/blocks', { startTime, endTime, project: values.project})\n           .then(res => {\n             console.log(res);\n             refreshBlocks()\n           })\n      handleClose();\n    }\n    setSubmitStatus({ valid, msg });\n  }\n\n  // Check to see if the start/end times conflict with existing blocks\n  useEffect(() => {\n\n    setBadStart(false);\n    setBadEnd(false);\n    const [startMinutes, endMinutes] = getBoundaryMinutes(values);\n    const dayBlocks = blocks.filter(block => new Date(block.start_time).getDate() === currentDay.getDate())\n    dayBlocks.forEach(block => {\n      const blockStart = new Date(block.start_time);\n      const blockEnd = new Date(block.end_time);\n      const blockStartMins = minutesSinceMidnight(blockStart.getHours(), blockStart.getMinutes())\n      const blockEndMins = minutesSinceMidnight(blockEnd.getHours(), blockEnd.getMinutes())\n\n      if (startMinutes >= blockStartMins &&\n        startMinutes < blockEndMins) {\n            setBadStart(true);\n      }\n\n      if (endMinutes > blockStartMins &&\n        endMinutes <= blockEndMins) {\n          setBadEnd(true);\n      }\n    })\n  }, [values, currentDay, blocks, getBoundaryMinutes])\n\n  // Make the options lists for the form <select> tags\n  const projectOptions = Object.values(projects).reverse().map(project => (\n    <option value={project.id}>{project.title}</option>\n  ));\n\n  const hoursOptions = function() {\n    const optionsList = [];\n    for(let i = 1; i <= 12; i++) {\n      optionsList.push(<option>{i}</option>)\n    }\n    return optionsList;\n  }()\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Schedule a new Block </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Date: <strong>{currentDateText}</strong>\n        <form onSubmit={handleSubmit}>\n          <div className=\"row row-cols-lg-auto g-5 align-items-center\">\n            <label for=\"project\">Project</label>\n            <div class=\"col-12\">\n              <select class=\"form-select\" name=\"project\" id=\"project\" value={values.project} onChange={handleChange}>\n                <option value=\"\">Select a project</option>\n                {projectOptions}\n              </select>\n            </div>\n          </div>\n          <div className=\"row row-cols-lg-auto g-2 mt-1 align-items-center\">\n            <label for=\"startHour\">Starting at:</label>\n            <div className=\"col-12\">\n              <select className=\"form-select\" name=\"startHour\" id=\"startHour\" value={values.startHour} onChange={handleChange}>\n                {hoursOptions}\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select class=\"form-select\" name=\"startMinute\" id=\"startMinute\" value={values.startMinute} onChange={handleChange}>\n                <option>00</option>\n                <option>15</option>\n                <option>30</option>\n                <option>45</option>\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select class=\"form-select\" name=\"startAMPM\" id=\"startAMPM\" value={values.startAMPM} onChange={handleChange}>\n                <option value=\"0\">AM</option>\n                <option value=\"12\">PM</option>\n              </select>\n            </div>\n            {badStart &&\n             (<small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n             That start time conflicts with an existing Block!\n             </small>)}\n          </div>\n          <div className=\"row row-cols-lg-auto g-2 mt-1 align-items-center\">\n            <label>Ending at:</label>\n            <div className=\"col-12\">\n              <select class=\"form-select\" name=\"endHour\" id=\"endHour\" value={values.endHour} onChange={handleChange}>\n                {hoursOptions}\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select class=\"form-select\" name=\"endMinute\" id=\"endMinute\" value={values.endMinute} onChange={handleChange}>\n                <option>00</option>\n                <option>15</option>\n                <option>30</option>\n                <option>45</option>\n              </select>\n            </div>\n            <div className=\"col-12\">\n              <select class=\"form-select\" name=\"endAMPM\" id=\"endAMPM\" value={values.endAMPM} onChange={handleChange}>\n                <option value=\"0\">AM</option>\n                <option value=\"12\">PM</option>\n              </select>\n            </div>\n            {badEnd &&\n             (<small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n             That end time conflicts with an existing Block!\n             </small>)}\n          </div>\n        </form>\n        </Modal.Body>\n          {!submitStatus.valid && (\n            <Modal.Footer>{submitStatus.msg}</Modal.Footer>\n          )}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import axios from 'axios';\nimport useControlledForms from '../hooks/useControlledForms';\n\nexport default function LoginRegister(props) {\n\n  const { setUsername } = props;\n\n  const [formValues, handleFormChange] = useControlledForms({\n    loginUsername: \"\",\n    loginPass: \"\",\n    registerUsername: \"\",\n    registerPass: \"\"\n  });\n\n  const handleLogin = event => {\n    event.preventDefault();\n    const { loginUsername, loginPass } = formValues;\n    console.log(`Logging in with username: ${loginUsername} and password: ${loginPass}`);\n    axios.post(`/api/login`, {username: loginUsername, rawPassword: loginPass})\n         .then(res => setUsername(res.data.username))\n  }\n\n  const handleRegister = event => {\n    event.preventDefault();\n    const { registerUsername, registerPass } = formValues;\n    console.log(`Registering a new user with username: ${registerUsername} and password: ${registerPass}`);\n    axios.post(`/api/users`, {username: registerUsername, rawPassword: registerPass})\n         .then(res => setUsername(res.data.username))\n  }\n\n\n  return (\n    <div className=\"login-register\">\n      <div className=\"login m-2\">\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\"\n          onSubmit={handleLogin}>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"loginUsername\">Username: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"loginUsername\" type=\"text\" value={formValues.loginUsername} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"loginPass\">Password: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"loginPass\" type=\"password\" value={formValues.loginPass} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <button class=\"btn btn-success\">Login</button>\n          </div>\n        </form>\n      </div>\n      <div className=\"register m-2\">\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\"\n          onSubmit={handleRegister}>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"registerUsername\">Username: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"registerUsername\" type=\"text\" value={formValues.registerUsername} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <label className=\"form-label\" htmlFor=\"registerPass\">Password: </label>\n          </div>\n          <div className=\"col-12\">\n            <input className=\"form-control\" name=\"registerPass\" type=\"password\" value={formValues.registerPass} onChange={handleFormChange}></input>\n          </div>\n          <div className=\"col-12\">\n            <button className=\"btn btn-success\">Register</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}","import axios from 'axios';\nimport '../styles/Block.css'\n\nexport default function Block(props) {\n  const { title, project_id, length, day, start_time, end_time } = props;\n\n  const startTimeStr = new Date(start_time).toLocaleTimeString();\n  const endTimeStr = new Date(end_time).toLocaleTimeString();\n\n  return(\n    <li className=\"block list-group-item\"\n      projectid={project_id}\n    >\n      <h5>{title}</h5>\n      From: {startTimeStr} to {endTimeStr}\n    </li>\n  )\n}","import Block from './Block'\n\nexport default function BlockList(props) {\n  const { blocks, day } = props;\n\n  const getFifteenMinuteUnits = (start, end) => {\n    const lengthMs = new Date(end) - new Date(start);\n    const lengthMins = lengthMs / 1000 / 60;\n    const fifteenMinuteUnits = lengthMins / 15;\n    return fifteenMinuteUnits;\n  }\n\n  const blocksForDay = blocks.filter(block => new Date(block.start_time).getDate() === day.getDate())\n    .map(block => (\n      <Block\n        {...block}\n        day={new Date(block.start_time)}\n        length={getFifteenMinuteUnits(block.start_time, block.end_time)}\n      />\n    ))\n\n  return (\n    <ul className=\"blockList list-group ms-2 me-2\">\n      { blocksForDay }\n    </ul>\n  )\n}","import '../styles/DaySchedule.css';\n\nimport Button from 'react-bootstrap/Button';\nimport BlockList from './BlockList'\n\nexport default function DaySchedule(props) {\n\n  // Props:\n  // blocks is an array of Block components.\n  const { blocks, day, tomorrow, yesterday, showForm } = props;\n  const dayMap = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednesday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\"\n  }\n\n  return(\n    <div className=\"daySchedule\">\n      <h3>{day.toDateString()}</h3>\n      <Button variant=\"primary\" onClick={showForm}>\n        Make a new block\n      </Button>\n        <div className=\"dayScheduleInternal mt-2\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={yesterday}>{`<--`}</button>\n          <BlockList \n            blocks={blocks}\n            day={day}\n          />\n          <button \n            className=\"btn btn-primary\"\n            onClick={tomorrow}>\n              {`-->`}\n          </button>\n      </div>\n    </div>\n  )\n}","export default function WeekSchedule(props) {\n\n  return (\n    <div>\n      <p>WeekSchedule component</p>\n    </div>\n  )\n}","export default function ProjectListItem(props) {\n  const { id, title, selected, onEditClick, onCancelClick, onSubmit, formValue, handleChange } = props;\n\n  return (\n    <li key={id} className=\"list-group-item d-flex justify-content-between bg-light\">\n      <span><strong>{title}</strong></span>\n      { selected &&\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\" onSubmit={onSubmit}>\n          <div className=\"col-12\">\n            <label className=\"visually-hidden\" htmlFor=\"newName\">New name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm\"\n              id=\"newName\"\n              value={formValue}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div className=\"col-12\">\n          <button className=\"btn btn-sm btn-secondary\">Submit</button>\n          </div>\n          <div className=\"col-12\">\n              <button className=\"btn btn-sm btn-danger\" onClick={onCancelClick}>Cancel</button>\n            </div>\n        </form>\n      }\n      { !selected &&\n        <button\n          className=\"btn btn-sm btn-info\" onClick={onEditClick}>Rename</button>\n      }\n    </li>\n  )\n}","import axios from 'axios';\nimport { useState } from 'react'\n\nimport ProjectListItem from './ProjectListItem'\n\nexport default function ProjectList(props) {\n  const { projects, setProjects } = props;\n\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [formValue, setFormValue] = useState(null);\n  const [showNewProjectForm, setShowNewProjectForm] = useState(false);\n  const [newProjectFormValue, setNewProjectFormValue] = useState(\"\");\n\n  const handleSubmit = (event, id) => {\n    event.preventDefault();\n    const title = formValue !== null ? formValue : projects[id].title;\n    setSelectedProject(null);\n    setFormValue(null);\n    const newProject = {...projects[id], title};\n    setProjects(prev => ({\n      ...prev,\n      [id]: newProject\n    }))\n    axios.patch(`/api/projects/${id}`, { title })\n         .then(res => console.log(res))\n  }\n\n  const handleCancel = event => {\n    event.preventDefault();\n    setSelectedProject(null);\n  }\n\n  const handleChange = event => {\n    setFormValue(event.target.value);\n  }\n\n  const handleNewProjectFormChange = event => {\n    setNewProjectFormValue(event.target.value);\n  }\n\n  const handleNewProjectSubmit = event => {\n    event.preventDefault();\n    axios.post(`/api/projects`, { projectTitle: newProjectFormValue })\n         .then(res => {\n           const newProject = res.data;\n           setProjects(prev => ({\n             ...prev,\n             [newProject.id]: newProject\n           }))\n         })\n         .then(() => {\n          setNewProjectFormValue(\"\");\n          setShowNewProjectForm(false)\n         })\n  }\n\n  const handleNewProjectCancel = event => {\n    event.preventDefault();\n    setNewProjectFormValue(\"\");\n    setShowNewProjectForm(false)\n  }\n\n  const projectItems = Object.values(projects).map(project => (\n    <ProjectListItem\n      {...project}\n      selected={ project.id === selectedProject}\n      onEditClick={() => setSelectedProject(project.id)}\n      onCancelClick={handleCancel}\n      onSubmit={(event) => handleSubmit(event, project.id)}\n      handleChange={handleChange}\n      formValue={formValue === null ? project.title : formValue}\n    />\n  ))\n\n  return (\n    <div className=\"container\">\n      <h3>My Projects</h3>\n\n      <ul className=\"list-group\">\n        {projectItems}\n      </ul>\n      <div className=\"newProject\">\n        { !showNewProjectForm &&\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setShowNewProjectForm(true)}\n          >\n              Add a Project\n          </button>\n        }\n        { showNewProjectForm &&\n          <form className=\"row row-cols-lg-auto g-3\" onSubmit={handleNewProjectSubmit}>\n            <div className=\"col-12\">\n              <label className=\"visually-hidden\" htmlFor=\"newProject\">New project name:</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                id=\"newProject\"\n                value={newProjectFormValue}\n                onChange={handleNewProjectFormChange}\n              ></input>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-success\" type=\"submit\">Submit</button>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-danger\" type=\"button\" onClick={handleNewProjectCancel}>Cancel</button>\n            </div>\n          </form>\n        }\n      </div>\n    </div>\n\n  )\n}","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default function Reports(props) {\n  const { projects } = props;\n\n  const [reportData, setReportData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`/api/reports/week`)\n         .then(res => setReportData(res.data))\n\n  }, [projects])\n\n  const report = reportData.map(project => {\n    // Totals are returned in seconds.\n    const { project_id, sessions_total, blocks_total } = project\n    const projectName = projects[project_id].title;\n    const secondsToHours = 1/(60*60);\n    const sessionHours = (sessions_total * secondsToHours) || 0\n    const blockHours = (blocks_total * secondsToHours) || 0\n    return (\n    <li key={project_id}>\n      {projectName}: {sessionHours.toPrecision(1)} / {blockHours} hours\n    </li>\n    )\n  })\n\n  return (\n    <div className=\"reports\">\n      <ul>\n        {report}\n      </ul>\n    </div>\n  )\n}","\nconst msDayMultiplier = 1000*60*60*24;\n\n// Given a Date object, return a Date object of the last Sunday.\nexport function getLastSunday(date) {\n// Get Sunday for this week.\nconst daysSinceSunday = date.getDay(); // Returns 0 for sunday, 1 for Monday, etc\nconst msSinceSunday = msDayMultiplier * daysSinceSunday;\nconst lastSundayMs = date.valueOf() - msSinceSunday;\nreturn new Date(lastSundayMs);\n}\n\n// Set h/min/s/ms of a given date to 0.\nexport function makeZeroDate(date) {\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Block from '../components/Block';\n\nimport { getLastSunday, makeZeroDate } from '../helpers/dayHelpers'\n\n// Ensures that the app always has the Blocks for the current week.\nexport default function useWeeklyBlocks(username) {\n  const today = new Date();\n  makeZeroDate(today);\n  const sunday = getLastSunday(today);\n\n  const [currentDay, setCurrentDay] = useState(today);\n  const [blocks, setBlocks] = useState([]);\n\n  // Uses an array of block objects from the API to create Block components.\n\n\n  // Loads blocks from the API, generates Block components, and sets state.\n  const loadUserBlocks = () => {\n    axios.get(`/api/blocks/week`)\n    .then(res => setBlocks(res.data))\n  }\n\n  // Compare two input days. If one is in a different week than the other,\n  // return true.\n  const checkForNewWeek = (current, newDay) => {\n    const currentSunday = getLastSunday(current);\n    const newSunday = getLastSunday(newDay);\n    if (currentSunday.getDate() !== newSunday.getDate()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Load the current week's blocks any time the username changes\n  useEffect(loadUserBlocks, [username]);\n\n  // Change currentDay by given number of days\n  // i.e. days = 1 gives next day, days = -1 gives prev day\n  // Check for new week and load new blocks if necessary.\n  const changeDay = days => {\n    const msDayMultiplier = 1000*60*60*24;\n    const deltaMs = msDayMultiplier*days;\n    const newDay = new Date(currentDay.valueOf() + deltaMs);\n    const newWeek = checkForNewWeek(currentDay, newDay)\n    if (newWeek) {\n      axios.get(`/api/blocks/week?date=${newDay.toISOString()}`)\n      .then(res => setBlocks(res.data))\n    }\n    setCurrentDay(newDay)\n  }\n\n  const refreshBlocks = () => {\n    axios.get(`/api/blocks/week?date=${currentDay.toISOString()}`)\n      .then(res => setBlocks(res.data))\n  }\n\n  return [blocks, refreshBlocks, currentDay, changeDay];\n}","import '../styles/App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Router components\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Custom components\nimport Header from './Header';\nimport StatusBar from './StatusBar';\nimport NewBlockForm from './NewBlockForm';\nimport LoginRegister from './LoginRegister';\nimport DaySchedule from './DaySchedule';\nimport WeekSchedule from './WeekSchedule';\nimport ProjectList from './ProjectList';\nimport Reports from './Reports';\n\n// Custom hooks\nimport useAuthentication from '../hooks/useAuthentication'\nimport useWeeklyBlocks from '../hooks/useWeeklyBlocks';\nimport useSessionTracking from '../hooks/useSessionTracking';\nimport usePopupModal from '../hooks/usePopupModal';\n\nexport default function App() {\n\n\n  const [loading, username, setUsername, logout] = useAuthentication();\n  const [blocks, refreshBlocks, currentDay, changeDay] = useWeeklyBlocks(username);\n  const [currentSession, toggleSession] = useSessionTracking(username);\n  const [showForm, closeForm, show] = usePopupModal();\n  const [projects, setProjects] = useState({})\n\n  useEffect(() => {\n    axios.get('/api/projects')\n         .then(res => {\n           const projectList = {};\n           res.data.projects.forEach(project => projectList[project.id] = project)\n           setProjects(projectList)\n         })\n  }, [username])\n\n  return (\n    <div className=\"App\"\n      onClick={toggleSession}\n    >\n      {/* If we haven't finished trying to log in: */}\n      {loading && <p>Currently loading...</p>}\n\n      {/* If there's no valid login: */}\n      {!loading && !username &&\n        <LoginRegister setUsername={setUsername} />\n      }\n\n      {/* If we've successfully logged in: */}\n      {!loading && username &&\n        <>\n          <Router basename=\"/timekeeper\">\n            <Header username={username} handleLogout={logout} currentSession={currentSession} />\n            <StatusBar currentSession={currentSession} projects={projects} />\n            <NewBlockForm \n              show={show}\n              handleShow={showForm}\n              handleClose={closeForm}\n              currentDay={currentDay}\n              projects={projects}\n              blocks={blocks}\n              refreshBlocks={refreshBlocks}\n            />\n            <Switch>\n              <Route exact path={[\"/\", \"/schedule\"]}>\n                <DaySchedule\n                  blocks={blocks}\n                  day={currentDay}\n                  tomorrow={() => changeDay(1)}\n                  yesterday={() => changeDay(-1)}\n                  showForm={showForm}\n                />\n              </Route>\n              <Route exact path=\"/week\" >\n                <WeekSchedule />\n              </Route>\n              <Route exact path=\"/projects\" >\n                <ProjectList projects={projects} setProjects={setProjects} />\n              </Route>\n              <Route exact path=\"/reports\" >\n                <Reports projects={projects} />\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useAuthentication() {\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(null);\n\n  // Attempt to authenticate the user if they've logged in previously.\n  useEffect(() => {\n    axios.post('/api/authenticate')\n      .then(res => {\n        setUsername(res.data.username)\n        setLoading(false);\n      })\n  }, []);\n\n  const logout = event => {\n    event.preventDefault();\n    axios.post(`/api/logout`)\n         .then(res => setUsername(res.data.username))\n  }\n\n  return [loading, username, setUsername, logout];\n}\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nexport default function useSessionTracking(username) {\n  const [currentSession, setCurrentSession] = useState({});\n\n  useEffect(() => {\n    // When the username changes, ping the server to see if there's an open session.\n    // If there is, load it into the state.\n  }, [username])\n\n  const toggleSession = event => {\n    // Try to find the nearest \"block\" class element.\n    const block = event.target.closest('.block')\n\n    // If there is one, then the user clicked on a block.\n    if (block) {\n      // Get the project ID from the block. Cast it to a number for comparison later.\n      const projectId = Number(block.getAttribute('projectid'))\n      // If we have a session running already, ping the API to stop it.\n      if (currentSession.id) {\n        axios.patch(`/api/sessions`, { session_id: currentSession.id })\n            .then(res => console.log('stopped session:', res.data))\n      }\n\n      // If the input matches the currently-tracked session, then we should just stop\n      // the current session without starting a new one.\n      console.log(`checking ${projectId} vs ${currentSession.project_id}, result: ${projectId === currentSession.project_id}`)\n      if (projectId === currentSession.project_id) {\n        setCurrentSession({});\n      } else {\n        // Otherwise, ping the API to start a new session and start tracking.\n        axios.post(`/api/sessions`, { project_id: projectId })\n            .then(res => setCurrentSession(res.data))\n      }\n    }\n\n  }\n\n  return [currentSession, toggleSession];\n}","import { useState } from 'react'\n\nexport default function usePopupModal() {\n\n  const [show, setShow] = useState(false);\n\n  const closeForm = () => setShow(false);\n  const showForm = () => setShow(true);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(event)\n    // Submit the form and close it\n    setShow(false);\n  }\n\n  return [showForm, closeForm, show]\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport axios from 'axios';\n\nif (process.env.REACT_APP_API_URL) {\n  console.log('found a variable:', process.env.REACT_APP_API_URL)\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL;\n  axios.defaults.withCredentials = true;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}