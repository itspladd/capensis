{"version":3,"sources":["components/Header.jsx","components/StatusBar.jsx","components/LoginRegister.jsx","hooks/useControlledForms.js","components/BlockList.jsx","components/DaySchedule.jsx","components/WeekSchedule.jsx","components/ProjectListItem.jsx","components/ProjectList.jsx","components/Reports.jsx","components/Block.jsx","helpers/dayHelpers.js","hooks/useWeeklyBlocks.js","components/App.jsx","hooks/useAuthentication.js","hooks/useSessionTracking.js","index.js"],"names":["Header","props","username","handleLogout","currentSession","className","to","type","id","onClick","StatusBar","projects","tracking","undefined","projectTitle","project_id","title","LoginRegister","setUsername","useState","loginUsername","loginPass","registerUsername","registerPass","formValues","setFormValues","event","preventDefault","prev","newVals","target","name","value","useControlledForms","handleFormChange","onSubmit","console","log","axios","post","rawPassword","then","res","data","htmlFor","onChange","BlockList","blocks","day","blocksForDay","filter","block","getDate","DaySchedule","tomorrow","yesterday","toDateString","WeekSchedule","ProjectListItem","selected","onEditClick","onCancelClick","formValue","handleChange","ProjectList","setProjects","selectedProject","setSelectedProject","setFormValue","showNewProjectForm","setShowNewProjectForm","newProjectFormValue","setNewProjectFormValue","handleCancel","projectItems","Object","values","map","project","newProject","patch","handleSubmit","Reports","reportData","setReportData","useEffect","get","report","sessions_total","blocks_total","projectName","secondsToHours","sessionHours","blockHours","toPrecision","Block","schedule_date","start_time","end_time","projectid","getLastSunday","date","msSinceSunday","getDay","lastSundayMs","valueOf","Date","useWeeklyBlocks","today","setHours","setMinutes","setSeconds","setMilliseconds","sunday","currentDay","setCurrentDay","currentWeek","setCurrentWeek","setBlocks","loadUserBlocks","toISOString","blockObj","currentSunday","days","deltaMs","App","loading","setLoading","useAuthentication","logout","changeDay","setCurrentSession","closest","projectId","Number","getAttribute","session_id","useSessionTracking","toggleSession","projectList","forEach","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c7ba8e8.chunk.js","sourcesContent":["// Router components\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport default function Header(props) {\n  const { username, handleLogout, currentSession } = props;\n\n  return(\n    <div className=\"navbar navbar-expand-sm navbar-light bg-info\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Timekeeper</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/day\">Day</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/week\">Week</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/projects\" className=\"nav-link\">Projects</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/reports\">Reports</NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"d-flex\">\n          <span className=\"navbar-text me-2\">Logged in as {username}</span>\n          <button className=\"btn btn-outline-dark\" onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import '../styles/StatusBar.css';\n\nexport default function StatusBar(props) {\n  const { currentSession, projects} = props;\n\n  const tracking = currentSession.id !== undefined;\n  const projectTitle = tracking && projects[currentSession.project_id].title\n\n  return (\n    <div className={`statusBar border-top border-info\n      ${tracking ? 'bg-warning' : 'bg-info'}`}>\n      { currentSession.id &&\n        `Currently tracking ${projectTitle}`\n      }\n      { !currentSession.id &&\n        `Not currently tracking`\n      }\n    </div>\n  )\n}","import axios from 'axios';\nimport useControlledForms from '../hooks/useControlledForms';\n\nexport default function LoginRegister(props) {\n\n  const { setUsername } = props;\n\n  const [formValues, handleFormChange] = useControlledForms();\n\n  const handleLogin = event => {\n    event.preventDefault();\n    const { loginUsername, loginPass } = formValues;\n    console.log(`Logging in with username: ${loginUsername} and password: ${loginPass}`);\n    axios.post(`/api/login`, {username: loginUsername, rawPassword: loginPass})\n         .then(res => setUsername(res.data.username))\n  }\n\n  const handleRegister = event => {\n    event.preventDefault();\n    const { registerUsername, registerPass } = formValues;\n    console.log(`Registering a new user with username: ${registerUsername} and password: ${registerPass}`);\n    axios.post(`/api/users`, {username: registerUsername, rawPassword: registerPass})\n         .then(res => setUsername(res.data.username))\n  }\n\n\n  return (\n    <div className=\"login-register\">\n      <div className=\"login\">\n        <form onSubmit={handleLogin}>\n          <label htmlFor=\"loginUsername\">Username: </label>\n          <input name=\"loginUsername\" type=\"text\" value={formValues.loginUsername} onChange={handleFormChange}></input>\n\n          <label htmlFor=\"loginPass\">Password: </label>\n          <input name=\"loginPass\" type=\"password\" value={formValues.loginPass} onChange={handleFormChange}></input>\n\n          <button>Login</button>\n        </form>\n      </div>\n      <div className=\"register\">\n        <form onSubmit={handleRegister}>\n          <label htmlFor=\"registerUsername\">Username: </label>\n          <input name=\"registerUsername\" type=\"text\" value={formValues.registerUsername} onChange={handleFormChange}></input>\n\n          <label htmlFor=\"registerPass\">Password: </label>\n          <input name=\"registerPass\" type=\"password\" value={formValues.registerPass} onChange={handleFormChange}></input>\n\n          <button>Register</button>\n        </form>\n      </div>\n    </div>\n  )\n}","import { useState } from 'react';\n\nexport default function useControlledForms() {\n  const [formValues, setFormValues] = useState({\n    loginUsername: \"\",\n    loginPass: \"\",\n    registerUsername: \"\",\n    registerPass: \"\"\n  })\n\n  const handleFormChange = event => {\n    event.preventDefault();\n    setFormValues(prev => {\n      const newVals = {...prev};\n      newVals[event.target.name] = event.target.value;\n      return newVals;\n    })\n  }\n\n  return [formValues, handleFormChange]\n}","export default function BlockList(props) {\n  const { blocks, day } = props;\n\n  const blocksForDay = blocks.filter(block => {\n    return block.props.day.getDate() === day.getDate();\n  })\n\n  return (\n    <div className=\"blockList\">\n      { blocksForDay }\n    </div>\n  )\n}","import '../styles/DaySchedule.css';\n\nimport BlockList from './BlockList'\n\nexport default function DaySchedule(props) {\n\n  // Props:\n  // blocks is an array of Block components.\n  const { blocks, day, tomorrow, yesterday } = props;\n\n  const dayMap = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednesday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\"\n  }\n\n  return(\n    <div className=\"daySchedule\">\n      <h3>{day.toDateString()}</h3>\n        <div className=\"dayScheduleInternal\">\n          <button \n            className=\"btn btn-primary\"\n            onClick={yesterday}>{`<--`}</button>\n          <BlockList \n            blocks={blocks}\n            day={day}\n          />\n          <button \n            className=\"btn btn-primary\"\n            onClick={tomorrow}>\n              {`-->`}\n          </button>\n      </div>\n    </div>\n  )\n}","export default function WeekSchedule(props) {\n\n  return (\n    <div>\n      <p>WeekSchedule component</p>\n    </div>\n  )\n}","export default function ProjectListItem(props) {\n  const { id, title, selected, onEditClick, onCancelClick, onSubmit, formValue, handleChange } = props;\n\n  return (\n    <li key={id} className=\"list-group-item d-flex justify-content-between\">\n      <span><strong>{title}</strong></span>\n      { selected &&\n        <form className=\"row row-cols-sm-auto g-3 align-items-center\" onSubmit={onSubmit}>\n          <div className=\"col-12\">\n            <label className=\"visually-hidden\" htmlFor=\"newName\">New name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm\"\n              id=\"newName\"\n              value={formValue}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div className=\"col-12\">\n          <button className=\"btn btn-sm btn-secondary\">Submit</button>\n          </div>\n          <div className=\"col-12\">\n              <button className=\"btn btn-sm btn-danger\" onClick={onCancelClick}>Cancel</button>\n            </div>\n        </form>\n      }\n      { !selected &&\n        <button\n          className=\"btn btn-sm btn-info\" onClick={onEditClick}>Rename</button>\n      }\n    </li>\n  )\n}","import axios from 'axios';\nimport { useState } from 'react'\n\nimport ProjectListItem from './ProjectListItem'\n\nexport default function ProjectList(props) {\n  const { projects, setProjects } = props;\n\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [formValue, setFormValue] = useState(null);\n  const [showNewProjectForm, setShowNewProjectForm] = useState(false);\n  const [newProjectFormValue, setNewProjectFormValue] = useState(\"\");\n\n  const handleSubmit = (event, id) => {\n    event.preventDefault();\n    const title = formValue !== null ? formValue : projects[id].title;\n    setSelectedProject(null);\n    setFormValue(null);\n    const newProject = {...projects[id], title};\n    setProjects(prev => ({\n      ...prev,\n      [id]: newProject\n    }))\n    axios.patch(`/api/projects/${id}`, { title })\n         .then(res => console.log(res))\n  }\n\n  const handleCancel = event => {\n    event.preventDefault();\n    setSelectedProject(null);\n  }\n\n  const handleChange = event => {\n    setFormValue(event.target.value);\n  }\n\n  const handleNewProjectFormChange = event => {\n    setNewProjectFormValue(event.target.value);\n  }\n\n  const handleNewProjectSubmit = event => {\n    event.preventDefault();\n    axios.post(`/api/projects`, { projectTitle: newProjectFormValue })\n         .then(res => {\n           const newProject = res.data;\n           setProjects(prev => ({\n             ...prev,\n             [newProject.id]: newProject\n           }))\n         })\n         .then(() => {\n          setNewProjectFormValue(\"\");\n          setShowNewProjectForm(false)\n         })\n  }\n\n  const handleNewProjectCancel = event => {\n    event.preventDefault();\n    setNewProjectFormValue(\"\");\n    setShowNewProjectForm(false)\n  }\n\n  const projectItems = Object.values(projects).map(project => (\n    <ProjectListItem\n      {...project}\n      selected={ project.id === selectedProject}\n      onEditClick={() => setSelectedProject(project.id)}\n      onCancelClick={handleCancel}\n      onSubmit={(event) => handleSubmit(event, project.id)}\n      handleChange={handleChange}\n      formValue={formValue === null ? project.title : formValue}\n    />\n  ))\n\n  return (\n    <div className=\"container\">\n      <h3>My Projects</h3>\n\n      <ul className=\"list-group\">\n        {projectItems}\n      </ul>\n      <div className=\"newProject\">\n        { !showNewProjectForm &&\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setShowNewProjectForm(true)}\n          >\n              Add a Project\n          </button>\n        }\n        { showNewProjectForm &&\n          <form className=\"row row-cols-lg-auto g-3\" onSubmit={handleNewProjectSubmit}>\n            <div className=\"col-12\">\n              <label className=\"visually-hidden\" htmlFor=\"newProject\">New project name:</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                id=\"newProject\"\n                value={newProjectFormValue}\n                onChange={handleNewProjectFormChange}\n              ></input>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-success\" type=\"submit\">Submit</button>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-danger\" type=\"button\" onClick={handleNewProjectCancel}>Cancel</button>\n            </div>\n          </form>\n        }\n      </div>\n    </div>\n\n  )\n}","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default function Reports(props) {\n  const { projects } = props;\n\n  const [reportData, setReportData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`/api/reports/week`)\n         .then(res => setReportData(res.data))\n\n  }, [projects])\n\n  const report = reportData.map(project => {\n    // Totals are returned in seconds.\n    const { project_id, sessions_total, blocks_total } = project\n    const projectName = projects[project_id].title;\n    const secondsToHours = 1/(60*60);\n    const sessionHours = (sessions_total * secondsToHours) || 0\n    const blockHours = (blocks_total * secondsToHours) || 0\n    return (\n    <li key={project_id}>\n      {projectName}: {sessionHours.toPrecision(1)} / {blockHours} hours\n    </li>\n    )\n  })\n\n  return (\n    <div className=\"reports\">\n      <ul>\n        {report}\n      </ul>\n    </div>\n  )\n}","import axios from 'axios';\nimport '../styles/Block.css'\n\nexport default function Block(props) {\n  const { title, project_id, schedule_date, start_time, end_time } = props;\n\n\n  return(\n    <div className=\"block\"\n      projectid={project_id}\n    >\n      <h5>{title}</h5>\n      <ul>\n        <li>Day: {schedule_date}</li>\n        <li>Starts at: {start_time}</li>\n        <li>Ends at: {end_time}</li>\n      </ul>\n    </div>\n  )\n}","\nconst msDayMultiplier = 1000*60*60*24;\n\n// Given a Date object, return a Date object of the last Sunday.\nexport function getLastSunday(date) {\n// Get Sunday for this week.\nconst daysSinceSunday = date.getDay(); // Returns 0 for sunday, 1 for Monday, etc\nconst msSinceSunday = msDayMultiplier * daysSinceSunday;\nconst lastSundayMs = date.valueOf() - msSinceSunday;\nreturn new Date(lastSundayMs);\n}\n\n// Set h/min/s/ms of a given date to 0.\nexport function makeZeroDate(date) {\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Block from '../components/Block';\n\nimport { getLastSunday, makeZeroDate } from '../helpers/dayHelpers'\n\n// Ensures that the app always has the Blocks for the current week.\nexport default function useWeeklyBlocks(username) {\n  const today = new Date();\n  makeZeroDate(today);\n  const sunday = getLastSunday(today);\n\n  const [currentDay, setCurrentDay] = useState(today);\n  const [currentWeek, setCurrentWeek] = useState(sunday);\n  const [blocks, setBlocks] = useState([]);\n\n  // Uses an array of block objects from the API to create Block components.\n  const generateBlockComponents = blockArray => {\n    return blockArray.map(blockObj => <Block\n      day={new Date(blockObj.start_time)}\n      {...blockObj}\n      />)\n  }\n\n  // Loads blocks from the API, generates Block components, and sets state.\n  const loadUserBlocks = () => {\n    axios.get(`/api/blocks/week?date=${currentDay.toISOString()}`)\n    .then(res => generateBlockComponents(res.data))\n    .then(blocks => setBlocks(blocks))\n  }\n\n  const checkAndUpdateWeek = () => {\n    const currentSunday = getLastSunday(currentDay);\n    if (currentWeek.getDate() !== currentSunday.getDate()) {\n      setCurrentWeek(currentSunday);\n      loadUserBlocks();\n    }\n  }\n\n  // Load the current week's blocks any time the username changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(loadUserBlocks, [username]);\n\n  // Check for a new week any time the current day changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(checkAndUpdateWeek, [currentDay])\n\n  // Change currentDay by given number of days\n  // i.e. days = 1 gives next day, days = -1 gives prev day\n  const changeDay = days => {\n    const msDayMultiplier = 1000*60*60*24;\n    const deltaMs = msDayMultiplier*days;\n    setCurrentDay(new Date(currentDay.valueOf() + deltaMs))\n  }\n\n  return [blocks, currentDay, changeDay];\n}","import '../styles/App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Router components\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Custom components\nimport Header from './Header';\nimport StatusBar from './StatusBar';\nimport LoginRegister from './LoginRegister';\nimport DaySchedule from './DaySchedule';\nimport WeekSchedule from './WeekSchedule';\nimport ProjectList from './ProjectList';\nimport Reports from './Reports';\n\n// Custom hooks\nimport useAuthentication from '../hooks/useAuthentication'\nimport useWeeklyBlocks from '../hooks/useWeeklyBlocks';\nimport useSessionTracking from '../hooks/useSessionTracking';\n\nexport default function App() {\n\n\n  const [loading, username, setUsername, logout] = useAuthentication();\n  const [blocks, currentDay, changeDay] = useWeeklyBlocks(username);\n  const [currentSession, toggleSession] = useSessionTracking(username);\n  const [projects, setProjects] = useState({})\n\n  useEffect(() => {\n    axios.get('/api/projects')\n         .then(res => {\n           const projectList = {};\n           res.data.projects.forEach(project => projectList[project.id] = project)\n           setProjects(projectList)\n         })\n  }, [username])\n\n  return (\n    <div className=\"App\"\n      onClick={toggleSession}\n    >\n      {/* If we haven't finished trying to log in: */}\n      {loading && <p>Currently loading...</p>}\n\n      {/* If there's no valid login: */}\n      {!loading && !username &&\n        <LoginRegister setUsername={setUsername} />\n      }\n\n      {/* If we've successfully logged in: */}\n      {!loading && username &&\n        <>\n          <Router>\n            <Header username={username} handleLogout={logout} currentSession={currentSession} />\n            <StatusBar currentSession={currentSession} projects={projects} />\n            <Switch>\n              <Route exact path={[\"/\", \"/day\"]}>\n                <DaySchedule\n                  blocks={blocks}\n                  day={currentDay}\n                  tomorrow={() => changeDay(1)}\n                  yesterday={() => changeDay(-1)}\n                />\n              </Route>\n              <Route exact path=\"/week\" >\n                <WeekSchedule />\n              </Route>\n              <Route exact path=\"/projects\" >\n                <ProjectList projects={projects} setProjects={setProjects} />\n              </Route>\n              <Route exact path=\"/reports\" >\n                <Reports projects={projects} />\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useAuthentication() {\n  const [loading, setLoading] = useState(true);\n  const [username, setUsername] = useState(null);\n\n  // Attempt to authenticate the user if they've logged in previously.\n  useEffect(() => {\n    axios.post('/api/authenticate')\n      .then(res => {\n        setUsername(res.data.username)\n        setLoading(false);\n      })\n  }, []);\n\n  const logout = event => {\n    event.preventDefault();\n    axios.post(`/api/logout`)\n         .then(res => setUsername(res.data.username))\n  }\n\n  return [loading, username, setUsername, logout];\n}\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nexport default function useSessionTracking(username) {\n  const [currentSession, setCurrentSession] = useState({});\n\n  useEffect(() => {\n    // When the username changes, ping the server to see if there's an open session.\n    // If there is, load it into the state.\n  }, [username])\n\n  const toggleSession = event => {\n    // Try to find the nearest \"block\" class element.\n    const block = event.target.closest('.block')\n\n    // If there is one, then the user clicked on a block.\n    if (block) {\n      // Get the project ID from the block. Cast it to a number for comparison later.\n      const projectId = Number(block.getAttribute('projectid'))\n      // If we have a session running already, ping the API to stop it.\n      if (currentSession.id) {\n        axios.patch(`/api/sessions`, { session_id: currentSession.id })\n            .then(res => console.log('stopped session:', res.data))\n      }\n\n      // If the input matches the currently-tracked session, then we should just stop\n      // the current session without starting a new one.\n      console.log(`checking ${projectId} vs ${currentSession.project_id}, result: ${projectId === currentSession.project_id}`)\n      if (projectId === currentSession.project_id) {\n        setCurrentSession({});\n      } else {\n        // Otherwise, ping the API to start a new session and start tracking.\n        axios.post(`/api/sessions`, { project_id: projectId })\n            .then(res => setCurrentSession(res.data))\n      }\n    }\n\n  }\n\n  return [currentSession, toggleSession];\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}